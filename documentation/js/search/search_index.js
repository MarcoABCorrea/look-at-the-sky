var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.877,1,1.21]],["body/components/AppComponent.html",[0,1.295,1,1.935,2,1.989,3,0.308,4,0.27,5,1.553,6,1.553,7,1.553,8,1.553,9,0.27,10,2.45,11,1.553,12,3.117,13,2.292,14,2.661,15,2.178,16,4.742,17,2.178,18,4.107,19,0.27,20,1.427,21,3,22,1.938,23,1.216,24,2.93,25,2.93,26,1.018,27,0.031,28,2.178,29,1.122,30,0.867,31,0.308,32,0.522,33,1.899,34,2.135,35,1.899,36,2.397,37,3,38,2.135,39,2.135,40,2.45,41,2.992,42,2.93,43,1.553,44,1.553,45,2.661,46,2.93,47,2.135,48,2.93,49,2.93,50,2.93,51,4.107,52,4.107,53,2.135,54,2.93,55,2.135,56,2.93,57,2.45,58,2.93,59,2.93,60,2.45,61,1.302,62,2.178,63,1.989,64,1.553,65,2.725,66,1.553,67,1.317,68,1.553,69,1.103,70,1.553,71,1.553,72,1.103,73,1.553,74,1.018,75,1.553,76,1.018,77,1.553,78,1.103,79,1.103,80,1.553,81,1.553,82,0.014,83,0.019,84,0.014]],["title/modules/AppModule.html",[85,2.082,86,2.082]],["body/modules/AppModule.html",[1,2.22,3,0.243,4,0.213,9,0.213,13,0.944,27,0.032,29,1.699,30,0.684,31,0.243,32,0.412,61,1.027,69,1.946,72,1.946,74,1.795,76,1.795,78,1.946,82,0.011,83,0.016,84,0.011,85,1.498,86,4.067,87,1.349,88,1.349,89,3.466,90,3.466,91,3.466,92,1.684,93,1.933,94,1.933,95,1.933,96,1.933,97,1.933,98,3.017,99,3.017,100,2.892,101,1.933,102,1.684,103,2.311,104,2.892,105,3.458,106,4.144,107,4.144,108,4.144,109,3.458,110,1.498,111,2.892,112,3.458,113,1.933,114,3.458,115,2.311,116,3.458,117,1.684,118,3.458,119,2.311,120,2.311,121,3.458,122,2.311,123,3.458,124,2.311,125,2.311,126,3.458,127,2.311,128,3.458,129,2.892,130,1.498,131,3.458,132,2.311,133,2.311,134,2.311,135,2.311,136,1.933,137,1.933,138,1.498,139,1.933,140,2.311,141,1.933,142,1.498,143,1.933,144,1.933,145,2.311,146,2.311,147,2.311,148,1.498]],["title/classes/AppPage.html",[32,0.572,149,2.341]],["body/classes/AppPage.html",[3,0.433,4,0.381,9,0.381,13,1.687,19,0.381,20,1.791,23,1.526,26,1.791,27,0.031,29,1.127,31,0.433,32,0.735,35,2.675,63,1.999,82,0.02,83,0.024,84,0.02,130,2.675,149,3.756,150,2.675,151,3.453,152,5.89,153,5.89,154,4.128,155,4.128,156,3.453,157,2.497,158,4.128,159,4.128,160,3.007,161,3.453,162,4.128]],["title/classes/AppRoutes.html",[32,0.572,163,2.082]],["body/classes/AppRoutes.html",[3,0.422,4,0.37,9,0.37,19,0.37,23,1.5,27,0.031,31,0.422,32,0.716,82,0.019,83,0.024,84,0.019,150,2.603,163,3.284,164,3.359,165,0.988,166,3.584,167,6.14,168,4.644,169,5.553,170,0.822,171,1.5,172,2.251,173,2.071,174,4.017,175,3.692,176,4.017,177,2.958]],["title/modules/AppRoutingModule.html",[85,2.082,98,1.876]],["body/modules/AppRoutingModule.html",[0,1.341,3,0.402,4,0.353,9,0.353,27,0.032,29,1.618,30,1.132,31,0.402,32,0.681,74,1.706,76,1.706,82,0.018,83,0.023,84,0.018,87,2.232,92,2.786,98,2.867,104,3.199,111,4.109,136,3.199,141,3.199,142,2.478,143,3.199,163,2.478,175,3.579,178,3.825,179,3.825,180,4.913,181,3.517,182,3.199,183,3.825,184,2.478,185,5.427,186,3.825,187,3.825]],["title/interfaces/Clouds.html",[188,0.572,189,2.082]],["body/interfaces/Clouds.html",[3,0.492,4,0.432,9,0.432,19,0.432,27,0.03,31,0.492,82,0.022,83,0.026,84,0.022,165,1.086,170,0.76,188,0.835,189,3.61,190,1.764,191,3.919,192,2.429]],["title/interfaces/Coordinates.html",[188,0.572,193,2.082]],["body/interfaces/Coordinates.html",[3,0.465,4,0.408,9,0.408,19,0.408,27,0.03,31,0.465,82,0.021,83,0.026,84,0.021,165,1.05,170,0.873,188,0.789,190,1.667,192,2.569,193,3.488,194,3.702,195,3.199,196,3.199]],["title/interfaces/DialogData.html",[188,0.572,197,2.082]],["body/interfaces/DialogData.html",[3,0.479,4,0.421,9,0.421,19,0.421,27,0.03,31,0.479,82,0.022,83,0.026,84,0.022,165,1.069,170,0.74,171,1.739,188,0.813,190,1.718,197,3.553,198,3.324,199,3.816,200,3.816,201,5.099]],["title/components/ErrorDialogComponent.html",[0,0.877,69,1.21]],["body/components/ErrorDialogComponent.html",[0,1.169,1,0.919,2,1.745,3,0.256,4,0.225,5,1.294,6,1.294,7,1.294,8,1.294,9,0.225,11,1.294,12,2.968,13,2.059,15,1.91,17,1.91,19,0.225,22,0.998,23,1.066,27,0.031,29,1.169,30,0.723,31,0.256,32,0.435,36,1.425,37,1.425,40,2.042,43,2.672,44,1.91,45,1.582,53,2.624,55,3.118,61,1.085,62,1.91,63,1.745,64,1.294,65,2.505,66,1.294,67,1.372,68,1.294,69,1.779,70,3.125,71,1.294,72,0.919,73,1.294,74,0.848,75,1.294,76,0.848,77,1.294,78,0.919,79,0.919,80,1.294,81,1.294,82,0.012,83,0.017,84,0.012,117,1.779,138,2.774,160,2.624,165,0.702,170,0.584,177,2.498,197,3.266,198,3.118,202,2.042,203,4.41,204,4.28,205,3.602,206,3.671,207,2.442,208,2.442,209,1.085,210,1.085,211,2.042,212,2.442,213,2.442,214,2.442,215,2.442,216,2.442,217,3.602,218,3.602,219,2.442,220,2.442,221,2.334,222,1.779,223,2.442,224,2.042,225,2.042,226,2.442,227,2.442,228,2.042,229,1.779,230,1.779,231,1.582,232,2.442,233,2.042,234,2.442,235,2.042,236,2.442,237,2.334,238,3.442,239,3.013,240,2.042,241,2.442,242,2.442,243,2.442,244,2.442,245,2.042,246,2.442,247,2.442]],["title/interfaces/GetWeatherResponse.html",[188,0.572,248,1.876]],["body/interfaces/GetWeatherResponse.html",[3,0.308,4,0.27,9,0.27,19,0.27,27,0.031,29,1.532,31,0.308,67,1.648,82,0.014,83,0.019,84,0.014,165,0.801,170,1.001,171,1.66,188,0.522,189,3.809,190,1.103,192,2.523,193,3.331,248,2.397,249,2.45,250,5.14,251,5.14,252,5.14,253,5.14,254,3.744,255,4.299,256,5.14,257,3.744,258,2.869,259,3.431,260,2.725,261,3.331,262,4.742,263,2.93,264,2.93,265,2.93,266,2.93,267,2.93,268,2.93]],["title/components/HeaderComponent.html",[0,0.877,72,1.21]],["body/components/HeaderComponent.html",[0,1.321,1,1.145,2,2.042,3,0.319,4,0.28,5,1.612,6,1.612,7,1.612,8,1.612,9,0.28,11,1.612,12,3.146,13,1.977,15,2.235,17,2.235,19,0.28,20,1.464,21,3.049,22,1.977,23,1.248,26,1.056,27,0.031,28,2.235,29,1.151,30,0.9,31,0.319,32,0.542,33,1.971,34,3.071,35,2.732,36,2.461,37,2.461,43,2.235,44,1.612,45,1.971,61,1.351,62,2.235,63,2.042,64,1.612,65,2.769,66,1.612,67,1.352,68,1.612,69,1.145,70,1.612,71,1.612,72,1.967,73,1.612,74,1.056,75,1.612,76,1.056,77,1.612,78,1.145,79,1.145,80,1.612,81,1.612,82,0.014,83,0.02,84,0.014,160,2.216,161,2.544,230,2.216,231,1.971,233,2.544,269,2.544,270,2.461,271,3.135,272,4.838,273,4.838,274,4.216,275,3.042,276,3.042,277,2.216,278,2.544,279,3.042,280,3.042,281,2.544,282,3.042,283,2.216]],["title/components/HomeComponent.html",[0,0.877,74,1.116]],["body/components/HomeComponent.html",[0,0.737,1,0.459,2,1.003,3,0.128,4,0.112,5,0.646,6,0.646,7,0.646,8,0.646,9,0.112,11,0.646,12,2.305,13,1.103,15,1.098,17,1.098,19,0.112,20,0.719,21,1.857,22,0.846,23,1.597,26,1.721,27,0.032,28,2.403,29,1.382,30,0.361,31,0.128,32,0.217,33,0.79,36,0.712,37,1.209,38,0.888,39,0.888,43,1.098,44,0.646,45,0.79,47,0.888,53,0.888,61,0.542,62,1.098,63,1.003,64,0.646,65,1.687,66,0.646,67,1.453,68,0.646,69,0.78,70,1.431,71,0.646,72,0.459,73,0.646,74,1.105,75,0.646,76,0.423,77,0.646,78,1.198,79,1.819,80,0.646,81,0.646,82,0.006,83,0.01,84,0.006,117,0.888,137,1.02,138,0.79,139,1.02,144,1.02,148,1.342,157,2.001,165,0.404,168,2.257,170,0.783,171,1.466,172,0.542,173,0.498,184,2.31,192,1.852,195,1.098,196,1.098,201,1.02,203,2.257,206,0.888,209,1.835,210,1.835,211,1.02,221,0.79,222,0.888,228,1.02,229,0.888,248,2.262,257,0.888,258,1.431,260,0.646,270,1.209,271,1.749,277,0.888,283,0.888,284,1.02,285,2.699,286,2.699,287,2.071,288,3.187,289,2.262,290,2.699,291,2.191,292,2.699,293,2.071,294,2.071,295,3.182,296,2.071,297,3.182,298,2.071,299,3.182,300,3.182,301,3.637,302,3.182,303,1.732,304,1.219,305,3.182,306,3.182,307,2.677,308,2.677,309,2.071,310,2.071,311,2.071,312,1.219,313,2.699,314,2.071,315,1.219,316,2.071,317,1.219,318,2.071,319,2.071,320,1.732,321,1.732,322,1.732,323,2.071,324,1.219,325,1.219,326,1.749,327,2.071,328,1.219,329,1.219,330,1.219,331,1.219,332,2.071,333,1.219,334,1.02,335,1.219,336,1.732,337,1.219,338,1.219,339,1.219,340,1.732,341,2.597,342,2.071,343,1.219,344,1.219,345,1.219,346,1.219,347,1.219,348,1.219,349,0.712,350,2.071,351,1.02,352,1.219,353,1.219,354,1.219,355,1.219,356,1.219,357,2.699,358,1.219,359,1.219,360,1.219,361,1.219,362,1.02,363,1.219,364,1.219,365,1.219,366,3.564,367,1.219,368,1.219,369,2.071,370,2.071,371,1.219,372,1.219,373,1.02,374,1.219,375,1.219,376,1.219,377,1.219,378,0.79,379,1.219,380,0.79,381,1.219,382,1.02,383,1.219,384,1.219,385,0.712,386,1.219,387,1.219,388,1.219,389,1.219,390,1.219,391,1.219,392,1.219,393,1.219,394,1.219,395,1.219,396,1.219,397,1.219,398,1.219,399,2.071,400,1.219,401,1.219,402,1.219,403,1.219,404,1.219,405,1.219,406,1.219,407,1.219,408,1.219,409,1.219,410,2.071,411,2.071,412,2.071,413,2.661,414,2.071,415,1.219,416,1.02]],["title/components/NotFoundComponent.html",[0,0.877,76,1.116]],["body/components/NotFoundComponent.html",[0,1.259,1,1.047,2,1.917,3,0.292,4,0.256,5,1.474,6,1.474,7,1.474,8,1.474,9,0.256,11,1.474,12,3.075,13,2.168,15,2.099,17,2.099,19,0.256,20,1.375,21,2.931,22,1.883,23,1.172,26,0.966,27,0.031,28,2.099,29,0.759,30,0.823,31,0.292,32,0.495,36,2.311,37,2.69,38,2.026,39,2.026,41,2.884,43,2.444,44,2.099,55,2.884,61,1.235,62,2.099,63,1.917,64,1.474,65,2.662,66,1.474,67,1.269,68,1.474,69,1.047,70,1.474,71,1.474,72,1.047,73,1.474,74,0.966,75,1.474,76,1.744,77,1.474,78,1.047,79,1.047,80,1.474,81,1.474,82,0.013,83,0.019,84,0.013,142,2.987,175,3.866,221,2.565,222,2.026,224,2.326,225,2.326,229,2.026,231,1.802,235,2.326,237,2.565,238,3.358,239,3.311,245,2.326,270,2.311,271,2.987,385,1.623,417,3.855,418,2.326,419,4.609,420,3.959,421,2.781,422,2.781,423,3.959,424,2.781,425,2.781,426,3.959,427,2.781,428,2.781,429,2.781,430,2.781]],["title/classes/Params.html",[32,0.572,431,1.876]],["body/classes/Params.html",[3,0.314,4,0.276,9,0.276,19,0.276,20,1.447,23,1.714,26,1.801,27,0.031,31,0.314,32,0.532,67,1.662,82,0.014,83,0.02,84,0.014,150,1.937,157,2.511,165,0.812,170,0.939,171,1.895,195,2.89,196,2.89,209,2.303,210,2.303,288,2.431,289,2.798,431,2.431,432,2.5,433,4.794,434,4.165,435,4.165,436,4.165,437,4.165,438,2.989,439,2.989,440,2.989,441,4.165,442,2.989,443,4.165,444,2.989,445,4.165,446,2.989,447,4.165,448,2.989,449,2.989,450,2.989,451,5.185]],["title/injectables/StorageService.html",[308,2.082,452,1.427]],["body/injectables/StorageService.html",[3,0.365,4,0.321,9,0.321,14,2.254,19,0.321,20,1.604,23,1.534,26,1.604,27,0.031,28,2.448,29,1.261,30,1.03,31,0.365,32,0.62,67,1.115,79,2.224,82,0.017,83,0.022,84,0.017,157,1.685,165,0.901,166,3.026,170,0.749,171,1.03,172,1.545,173,1.421,177,3.448,209,1.545,210,1.545,291,2.748,308,2.992,452,2.051,453,2.254,454,2.91,455,5.184,456,5.522,457,4.618,458,3.479,459,4.618,460,3.479,461,3.479,462,4.618,463,3.479,464,3.479,465,2.535,466,3.479,467,3.479,468,3.479,469,3.479,470,3.479]],["title/interfaces/System.html",[188,0.572,261,2.082]],["body/interfaces/System.html",[3,0.417,4,0.366,9,0.366,19,0.366,27,0.03,31,0.417,82,0.019,83,0.024,84,0.019,165,0.981,170,1.03,171,1.635,188,0.707,190,1.495,192,2.644,254,4.231,261,3.26,289,3.39,471,3.321,472,5.807,473,5.807]],["title/interfaces/Temperature.html",[188,0.572,260,1.704]],["body/interfaces/Temperature.html",[3,0.403,4,0.354,9,0.354,19,0.354,27,0.03,31,0.403,82,0.018,83,0.023,84,0.018,165,0.96,170,0.984,188,0.684,190,1.445,192,2.687,260,2.611,380,3.716,474,3.21,475,5.735,476,5.735,477,5.735,478,5.735,479,5.735]],["title/interfaces/Weather.html",[188,0.572,258,1.704]],["body/interfaces/Weather.html",[3,0.432,4,0.379,9,0.379,19,0.379,27,0.03,31,0.432,82,0.02,83,0.024,84,0.02,165,1.003,170,0.953,171,1.891,188,0.732,190,1.548,192,2.293,254,4.285,255,4.919,258,2.727,378,3.811,385,3.433,480,3.439]],["title/injectables/WeatherIconService.html",[452,1.427,481,2.082]],["body/injectables/WeatherIconService.html",[3,0.327,4,0.287,9,0.287,14,2.018,19,0.287,20,1.488,22,1.272,23,1.562,26,1.082,27,0.031,29,1.441,30,0.922,31,0.327,32,0.555,67,1.374,82,0.015,83,0.02,84,0.015,110,2.018,157,1.508,165,0.836,170,0.855,171,1.734,172,1.903,173,1.751,177,2.859,209,1.903,210,1.903,291,3.031,326,3.174,349,1.818,452,1.903,453,2.018,465,2.269,481,2.777,482,4.627,483,2.605,484,4.899,485,4.899,486,4.285,487,2.605,488,4.413,489,4.285,490,3.122,491,4.285,492,3.114,493,4.285,494,4.285,495,4.285,496,3.114,497,1.818,498,2.269,499,2.269,500,3.114,501,3.114,502,3.114,503,2.605]],["title/interceptors/WeatherInterceptor.html",[99,1.876,504,2.687]],["body/interceptors/WeatherInterceptor.html",[3,0.297,4,0.261,9,0.261,19,0.261,20,1.391,22,1.9,23,1.58,26,0.982,27,0.031,29,1.458,30,0.837,31,0.297,32,0.504,60,2.364,67,0.906,82,0.013,83,0.019,84,0.013,99,2.337,110,1.832,157,1.939,165,0.781,166,3.458,170,0.82,171,1.641,172,2.066,173,1.9,184,1.832,209,1.256,210,1.256,270,1.65,291,3.141,326,3.013,349,1.65,431,1.65,452,1.779,497,1.65,498,2.059,505,2.827,506,2.364,507,3.889,508,4.651,509,4.651,510,4.651,511,4.005,512,2.827,513,5.059,514,3.889,515,5.059,516,2.827,517,4.005,518,4.005,519,2.827,520,4.005,521,2.827,522,3.889,523,2.827,524,4.005,525,2.827,526,2.827,527,2.827,528,2.827,529,2.827,530,2.827,531,2.827,532,2.827,533,2.827,534,2.827,535,2.827]],["title/injectables/WeatherService.html",[307,2.082,452,1.427]],["body/injectables/WeatherService.html",[3,0.267,4,0.234,9,0.234,14,1.648,19,0.234,20,1.289,22,1.039,23,1.517,26,1.522,27,0.031,29,1.461,30,0.753,31,0.267,32,0.453,67,1.545,82,0.012,83,0.018,84,0.012,110,1.648,157,2.123,165,0.724,170,0.831,171,1.812,172,1.13,173,1.039,177,3.123,184,2.405,195,1.968,196,2.324,209,2.14,210,2.14,248,1.484,288,2.558,289,2.166,291,2.324,307,2.405,326,3.32,349,1.484,431,3.371,452,1.649,453,1.648,465,1.853,487,2.127,488,4.03,490,2.704,497,1.484,498,1.853,499,1.853,536,2.127,537,4.383,538,3.712,539,4.383,540,4.383,541,3.712,542,3.712,543,2.543,544,5.524,545,2.543,546,2.543,547,2.543,548,2.543,549,3.712,550,2.543,551,2.543,552,3.193,553,2.543,554,3.712,555,3.712,556,2.543,557,2.543,558,2.543,559,2.543]],["title/interfaces/Widget.html",[79,1.21,188,0.572]],["body/interfaces/Widget.html",[3,0.359,4,0.315,9,0.315,19,0.315,27,0.03,31,0.359,79,1.72,82,0.016,83,0.022,84,0.016,165,0.891,170,1.011,171,1.875,188,0.61,190,1.288,192,2.629,195,2.908,196,2.908,257,3.996,260,2.908,288,3.202,373,4.588,378,3.555,380,3.555,382,4.588,385,3.202,560,2.862]],["title/components/WidgetComponent.html",[0,0.877,78,1.21]],["body/components/WidgetComponent.html",[0,0.876,1,0.584,2,1.226,3,0.163,4,0.143,5,0.823,6,0.823,7,0.823,8,0.823,9,0.143,11,0.823,12,2.549,13,1.31,15,1.342,17,1.342,19,0.143,20,0.879,21,2.159,22,0.634,23,1.609,26,1.114,27,0.032,28,1.961,29,1.113,30,0.459,31,0.163,32,0.277,33,1.006,41,1.845,43,0.823,44,1.342,47,1.131,61,0.69,62,1.342,63,1.226,64,0.823,65,1.961,66,0.823,67,1.307,68,0.823,69,0.584,70,0.823,71,0.823,72,0.584,73,0.823,74,0.539,75,0.823,76,0.539,77,0.823,78,1.393,79,2.011,80,0.823,81,0.823,82,0.007,83,0.012,84,0.007,148,1.641,165,0.494,166,1.872,170,0.849,171,1.472,172,1.643,173,1.512,206,2.695,209,1.424,210,1.424,221,1.006,230,1.131,231,1.006,237,2.078,240,2.682,259,1.478,270,1.478,271,2.078,277,1.131,281,1.298,283,1.845,289,2.379,291,1.7,303,2.118,336,2.118,340,2.118,341,1.845,380,1.641,385,2.379,416,1.298,481,2.833,499,1.131,503,3.094,552,1.131,561,1.298,562,3.207,563,2.532,564,3.207,565,4.076,566,3.207,567,3.409,568,3.207,569,3.207,570,2.532,571,1.552,572,2.532,573,2.532,574,1.552,575,2.532,576,1.552,577,1.552,578,2.532,579,1.552,580,1.552,581,1.552,582,1.552,583,2.532,584,2.532,585,2.532,586,2.532,587,1.552,588,1.552,589,1.552,590,1.552,591,1.552,592,1.552,593,2.336,594,1.552,595,1.552,596,1.552,597,1.552,598,1.552,599,1.552,600,1.552,601,1.552,602,1.552,603,1.552,604,1.552,605,1.552,606,1.552,607,1.552,608,1.552,609,1.552,610,1.552,611,1.552,612,1.552,613,1.552,614,1.552,615,1.552,616,1.552,617,1.552,618,2.532,619,2.532,620,2.532,621,2.532,622,2.532,623,1.298,624,2.532,625,2.532,626,2.532,627,2.118,628,2.532,629,2.532,630,3.207,631,2.532,632,1.552,633,1.552,634,1.552,635,1.552,636,2.532,637,1.552,638,1.552,639,1.552,640,1.552,641,1.552,642,1.552,643,1.552,644,1.552,645,1.552,646,1.552,647,1.552,648,1.552,649,1.552,650,1.552,651,1.552,652,1.552]],["title/interfaces/Wind.html",[188,0.572,259,1.876]],["body/interfaces/Wind.html",[3,0.465,4,0.408,9,0.408,19,0.408,27,0.03,31,0.465,82,0.021,83,0.026,84,0.021,165,1.05,170,0.873,188,0.789,190,1.667,192,2.569,259,3.142,623,5.047,627,5.047,653,3.702]],["title/coverage.html",[654,3.189]],["body/coverage.html",[0,1.481,1,0.996,9,0.244,10,2.213,27,0.031,32,0.799,69,0.996,72,0.996,74,0.919,76,0.919,78,0.996,79,0.996,82,0.013,83,0.018,84,0.013,99,1.545,138,1.715,142,1.715,149,1.928,151,2.213,163,1.715,164,2.213,170,0.429,188,1.039,189,1.715,191,2.213,193,1.715,194,2.213,197,1.715,198,2.783,199,2.213,200,2.213,202,2.213,237,4.209,248,1.545,249,2.213,258,1.403,259,1.545,260,1.403,261,1.715,269,2.213,284,2.213,307,1.715,308,1.715,417,2.213,418,2.213,431,1.545,432,2.213,452,1.992,454,2.213,471,2.213,474,2.213,480,2.213,481,1.715,482,2.213,483,2.213,497,3.039,504,2.213,506,2.213,536,2.213,552,1.928,560,2.213,561,2.213,653,2.213,654,1.928,655,1.928,656,2.647,657,2.647,658,5.725,659,2.647,660,2.647,661,2.647,662,3.821,663,2.647,664,2.647,665,4.483,666,2.647,667,3.821,668,2.647,669,2.647,670,2.213,671,5.592,672,5.592,673,2.213,674,2.213,675,2.213,676,2.213,677,3.195,678,2.213,679,2.213,680,2.647,681,2.647]],["title/dependencies.html",[88,2.255,682,2.687]],["body/dependencies.html",[27,0.031,30,1.198,82,0.019,83,0.024,84,0.019,88,2.363,113,3.385,129,4.259,130,3.3,182,3.385,349,2.363,593,2.949,683,4.048,684,6.316,685,4.048,686,5.093,687,4.048,688,4.048,689,4.048,690,4.048,691,4.048,692,4.048,693,4.048,694,5.093,695,4.048,696,4.048,697,4.048,698,4.048,699,4.048,700,4.048,701,4.048]],["title/miscellaneous/enumerations.html",[702,1.741,703,3.231]],["body/miscellaneous/enumerations.html",[19,0.406,27,0.03,82,0.021,83,0.025,84,0.021,173,2.524,195,2.847,196,2.847,522,4.49,702,2.856,703,3.687,704,4.408,705,4.408,706,4.408,707,4.408,708,4.408,709,4.408,710,4.408,711,4.408,712,4.408,713,4.408,714,4.408,715,4.408,716,4.408,717,4.408]],["title/index.html",[19,0.248,718,2.247,719,2.247]],["body/index.html",[4,0.346,13,1.054,27,0.021,34,1.88,35,1.672,57,4.311,82,0.012,83,0.018,84,0.012,88,1.506,156,2.159,166,1.506,238,1.88,258,2.572,288,2.19,301,3.138,320,2.159,321,2.159,322,2.159,351,2.159,362,2.159,378,1.672,413,3.138,490,1.88,514,3.138,567,2.159,593,1.88,654,2.733,655,3.22,720,2.159,721,5.154,722,2.581,723,4.42,724,2.581,725,2.581,726,3.752,727,2.581,728,3.752,729,3.752,730,2.581,731,3.752,732,2.581,733,2.581,734,2.581,735,2.581,736,2.581,737,2.581,738,4.42,739,2.159,740,2.581,741,2.581,742,4.42,743,2.581,744,2.581,745,2.581,746,2.581,747,2.581,748,2.581,749,2.581,750,2.581,751,3.752,752,2.581,753,2.581,754,2.581,755,5.797,756,3.752,757,4.42,758,2.581,759,2.581,760,2.581,761,2.581,762,4.42,763,3.752,764,2.581,765,2.581,766,2.581,767,2.581,768,2.581,769,2.581,770,2.159,771,2.581,772,4.852,773,2.581,774,2.581,775,2.581,776,4.42,777,2.581,778,2.159,779,2.581,780,2.581,781,5.154,782,2.581,783,2.581,784,2.581,785,2.581,786,3.138,787,2.581,788,2.159,789,3.752,790,3.752,791,5.378,792,3.752,793,3.752,794,2.581,795,2.581,796,3.752,797,2.581,798,2.581,799,2.581,800,4.852,801,3.752,802,2.581,803,2.581,804,2.581,805,2.581,806,2.581,807,2.581,808,2.581,809,2.581,810,3.752,811,2.581,812,2.581,813,2.581,814,4.42,815,2.581,816,2.581,817,2.581,818,2.581,819,2.581,820,2.581,821,2.581,822,2.581]],["title/license.html",[718,2.247,719,2.247,823,2.247]],["body/license.html",[27,0.022,82,0.017,83,0.022,84,0.017,102,2.543,334,2.919,655,2.543,720,2.919,770,2.919,786,3.871,823,2.919,824,3.491,825,5.192,826,3.491,827,3.491,828,3.491,829,3.491,830,3.491,831,3.491,832,4.628,833,3.491,834,3.491,835,3.491,836,3.491,837,3.491,838,3.491,839,4.628,840,6.2,841,3.491,842,3.491,843,5.192,844,3.491,845,4.628,846,3.491,847,3.491,848,3.491,849,3.491,850,3.491,851,3.491,852,3.491,853,3.491,854,3.491,855,4.628,856,3.491,857,3.491,858,3.491,859,3.491,860,3.491,861,3.491,862,3.491,863,4.628,864,4.628,865,3.491,866,3.491,867,3.491,868,3.491,869,3.491,870,3.491,871,3.491,872,3.491,873,3.491,874,3.491,875,3.491,876,3.491,877,3.491,878,3.491,879,3.491,880,3.491,881,3.491,882,3.491,883,3.491,884,3.491,885,3.491,886,3.491,887,3.491,888,3.491,889,3.491,890,3.491,891,3.491,892,3.491]],["title/modules.html",[87,2.555]],["body/modules.html",[27,0.027,82,0.023,83,0.027,84,0.023,86,3.165,87,2.851,98,2.851,130,3.165,778,4.085,893,4.885,894,4.885,895,5.708,896,4.885]],["title/overview.html",[897,3.661]],["body/overview.html",[1,2.29,2,1.749,27,0.03,61,1.604,69,1.988,72,1.988,74,1.834,76,1.834,78,1.988,82,0.017,83,0.022,84,0.017,85,2.341,86,4.248,87,2.108,88,2.108,89,3.021,90,3.021,91,3.021,92,2.631,93,3.021,94,3.021,95,3.021,96,3.021,97,3.021,98,3.082,99,3.082,100,3.959,101,3.021,102,2.631,150,2.341,181,2.341,190,1.36,278,3.021,453,2.341,739,3.021,897,3.021,898,3.612,899,5.28]],["title/routes.html",[181,2.837]],["body/routes.html",[27,0.028,82,0.024,83,0.028,84,0.024,181,3.305]],["title/miscellaneous/variables.html",[702,1.741,900,3.231]],["body/miscellaneous/variables.html",[19,0.29,27,0.032,82,0.015,83,0.02,84,0.015,148,3.597,170,0.93,172,2.547,173,2.343,341,2.289,497,3.583,507,4.642,670,2.628,673,2.628,674,2.628,675,2.628,676,2.628,677,2.628,678,3.606,679,3.606,702,2.036,788,4.642,900,2.628,901,4.312,902,3.143,903,3.143,904,3.143,905,3.143,906,3.143,907,3.143,908,3.143,909,5.551,910,5.551,911,5.551,912,5.551,913,3.143,914,3.143,915,3.143,916,3.143]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppRoutes.html":{},"modules/AppRoutingModule.html":{},"interfaces/Clouds.html":{},"interfaces/Coordinates.html":{},"interfaces/DialogData.html":{},"components/ErrorDialogComponent.html":{},"interfaces/GetWeatherResponse.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"classes/Params.html":{},"injectables/StorageService.html":{},"interfaces/System.html":{},"interfaces/Temperature.html":{},"interfaces/Weather.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"interfaces/Widget.html":{},"components/WidgetComponent.html":{},"interfaces/Wind.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":237,"title":{},"body":{"components/ErrorDialogComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{},"coverage.html":{}}}],["0.10.3",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["0.3em",{"_index":236,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["0/1",{"_index":672,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":669,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":663,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":668,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":662,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":658,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":661,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":667,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":665,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":666,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":664,"title":{},"body":{"coverage.html":{}}}],["080c21",{"_index":645,"title":{},"body":{"components/WidgetComponent.html":{}}}],["0px",{"_index":641,"title":{},"body":{"components/WidgetComponent.html":{}}}],["1",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"interceptors/WeatherInterceptor.html":{}}}],["1.0625rem",{"_index":428,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["1.4em",{"_index":247,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["1.5em",{"_index":243,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["1.5rem",{"_index":430,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["1.875rem",{"_index":425,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["1/18",{"_index":660,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":624,"title":{},"body":{"components/WidgetComponent.html":{}}}],["100",{"_index":283,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/WidgetComponent.html":{}}}],["1000",{"_index":405,"title":{},"body":{"components/HomeComponent.html":{}}}],["100vh",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["1180px",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["11998770b8b4aa7242b99aa88688ca78",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["150px",{"_index":632,"title":{},"body":{"components/WidgetComponent.html":{}}}],["180",{"_index":710,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["1em",{"_index":242,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["1rem",{"_index":241,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["2",{"_index":278,"title":{},"body":{"components/HeaderComponent.html":{},"overview.html":{}}}],["2.25rem",{"_index":427,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["2.27.0",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["2.5.2",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["2.6.11",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["2020",{"_index":827,"title":{},"body":{"license.html":{}}}],["20rem",{"_index":219,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["25px",{"_index":637,"title":{},"body":{"components/WidgetComponent.html":{}}}],["26px",{"_index":644,"title":{},"body":{"components/WidgetComponent.html":{}}}],["2em",{"_index":239,"title":{},"body":{"components/ErrorDialogComponent.html":{},"components/NotFoundComponent.html":{}}}],["2x.png",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":899,"title":{},"body":{"overview.html":{}}}],["30px",{"_index":638,"title":{},"body":{"components/WidgetComponent.html":{}}}],["31px",{"_index":642,"title":{},"body":{"components/WidgetComponent.html":{}}}],["35px",{"_index":643,"title":{},"body":{"components/WidgetComponent.html":{}}}],["3600).tofixed(1",{"_index":406,"title":{},"body":{"components/HomeComponent.html":{}}}],["3em",{"_index":415,"title":{},"body":{"components/HomeComponent.html":{}}}],["3px",{"_index":232,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["400",{"_index":424,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["4px",{"_index":279,"title":{},"body":{"components/HeaderComponent.html":{}}}],["5",{"_index":659,"title":{},"body":{"coverage.html":{}}}],["5a5a5a",{"_index":222,"title":{},"body":{"components/ErrorDialogComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{}}}],["6",{"_index":898,"title":{},"body":{"overview.html":{}}}],["6.5.5",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":598,"title":{},"body":{"components/WidgetComponent.html":{}}}],["600",{"_index":246,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["685bd7",{"_index":280,"title":{},"body":{"components/HeaderComponent.html":{}}}],["7.2.16",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["9",{"_index":739,"title":{},"body":{"index.html":{},"overview.html":{}}}],["9.1.6",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["9.2.3",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":708,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["9px",{"_index":635,"title":{},"body":{"components/WidgetComponent.html":{}}}],["above",{"_index":862,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":650,"title":{},"body":{"components/WidgetComponent.html":{}}}],["action",{"_index":886,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["add",{"_index":818,"title":{},"body":{"index.html":{}}}],["afterviewinit",{"_index":285,"title":{},"body":{"components/HomeComponent.html":{}}}],["against",{"_index":816,"title":{},"body":{"index.html":{}}}],["align",{"_index":225,"title":{},"body":{"components/ErrorDialogComponent.html":{},"components/NotFoundComponent.html":{}}}],["and/or",{"_index":853,"title":{},"body":{"license.html":{}}}],["angular",{"_index":738,"title":{},"body":{"index.html":{}}}],["angular's",{"_index":804,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{}}}],["angular/compiler",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"injectables/StorageService.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"components/WidgetComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"components/ErrorDialogComponent.html":{},"components/HomeComponent.html":{}}}],["angular/material/form",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":723,"title":{},"body":{"index.html":{}}}],["api_key",{"_index":507,"title":{},"body":{"interceptors/WeatherInterceptor.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{},"index.html":{}}}],["app.component",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app_id",{"_index":508,"title":{},"body":{"interceptors/WeatherInterceptor.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appendparams",{"_index":538,"title":{},"body":{"injectables/WeatherService.html":{}}}],["appendparams(params",{"_index":542,"title":{},"body":{"injectables/WeatherService.html":{}}}],["appid",{"_index":520,"title":{},"body":{"interceptors/WeatherInterceptor.html":{}}}],["appmodule",{"_index":86,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":149,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutes",{"_index":163,"title":{"classes/AppRoutes.html":{}},"body":{"classes/AppRoutes.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":98,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arising",{"_index":890,"title":{},"body":{"license.html":{}}}],["array",{"_index":262,"title":{},"body":{"interfaces/GetWeatherResponse.html":{}}}],["artifacts",{"_index":782,"title":{},"body":{"index.html":{}}}],["associated",{"_index":841,"title":{},"body":{"license.html":{}}}],["aurélio",{"_index":829,"title":{},"body":{"license.html":{}}}],["authors",{"_index":879,"title":{},"body":{"license.html":{}}}],["auto",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["automatic",{"_index":771,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":767,"title":{},"body":{"index.html":{}}}],["available",{"_index":778,"title":{},"body":{"index.html":{},"modules.html":{}}}],["awesome",{"_index":741,"title":{},"body":{"index.html":{}}}],["background",{"_index":281,"title":{},"body":{"components/HeaderComponent.html":{},"components/WidgetComponent.html":{}}}],["base",{"_index":250,"title":{},"body":{"interfaces/GetWeatherResponse.html":{}}}],["base64",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["base_url",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baseline",{"_index":227,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["basepath",{"_index":537,"title":{},"body":{"injectables/WeatherService.html":{}}}],["batista",{"_index":830,"title":{},"body":{"license.html":{}}}],["bellow",{"_index":410,"title":{},"body":{"components/HomeComponent.html":{}}}],["better",{"_index":807,"title":{},"body":{"index.html":{}}}],["blob",{"_index":503,"title":{},"body":{"injectables/WeatherIconService.html":{},"components/WidgetComponent.html":{}}}],["boolean",{"_index":340,"title":{},"body":{"components/HomeComponent.html":{},"components/WidgetComponent.html":{}}}],["bootstrap",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":230,"title":{},"body":{"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/WidgetComponent.html":{}}}],["bottom",{"_index":231,"title":{},"body":{"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["box",{"_index":639,"title":{},"body":{"components/WidgetComponent.html":{}}}],["breakpoint",{"_index":416,"title":{},"body":{"components/HomeComponent.html":{},"components/WidgetComponent.html":{}}}],["breakpoint('desktop",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["browse",{"_index":895,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":158,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":781,"title":{},"body":{"index.html":{}}}],["buildwidgetobject",{"_index":293,"title":{},"body":{"components/HomeComponent.html":{}}}],["buildwidgetobject(res",{"_index":311,"title":{},"body":{"components/HomeComponent.html":{}}}],["button",{"_index":244,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["c",{"_index":826,"title":{},"body":{"license.html":{}}}],["cach",{"_index":732,"title":{},"body":{"index.html":{}}}],["catcherror",{"_index":350,"title":{},"body":{"components/HomeComponent.html":{}}}],["cdr",{"_index":310,"title":{},"body":{"components/HomeComponent.html":{}}}],["celsius",{"_index":714,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["center",{"_index":229,"title":{},"body":{"components/ErrorDialogComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{}}}],["change",{"_index":769,"title":{},"body":{"index.html":{}}}],["changedetectorref",{"_index":305,"title":{},"body":{"components/HomeComponent.html":{}}}],["charge",{"_index":836,"title":{},"body":{"license.html":{}}}],["child",{"_index":361,"title":{},"body":{"components/HomeComponent.html":{}}}],["choice",{"_index":753,"title":{},"body":{"index.html":{}}}],["circular",{"_index":727,"title":{},"body":{"index.html":{}}}],["city",{"_index":288,"title":{},"body":{"components/HomeComponent.html":{},"classes/Params.html":{},"injectables/WeatherService.html":{},"interfaces/Widget.html":{},"index.html":{}}}],["claim",{"_index":882,"title":{},"body":{"license.html":{}}}],["class",{"_index":32,"title":{"classes/AppPage.html":{},"classes/AppRoutes.html":{},"classes/Params.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppRoutes.html":{},"modules/AppRoutingModule.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"classes/Params.html":{},"injectables/StorageService.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"components/WidgetComponent.html":{},"coverage.html":{}}}],["classes",{"_index":150,"title":{},"body":{"classes/AppPage.html":{},"classes/AppRoutes.html":{},"classes/Params.html":{},"overview.html":{}}}],["cli",{"_index":760,"title":{},"body":{"index.html":{}}}],["client",{"_index":724,"title":{},"body":{"index.html":{}}}],["close",{"_index":218,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["clouds",{"_index":189,"title":{"interfaces/Clouds.html":{}},"body":{"interfaces/Clouds.html":{},"interfaces/GetWeatherResponse.html":{},"coverage.html":{}}}],["clouds.model",{"_index":263,"title":{},"body":{"interfaces/GetWeatherResponse.html":{}}}],["cluster_appmodule",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cod",{"_index":251,"title":{},"body":{"interfaces/GetWeatherResponse.html":{}}}],["code",{"_index":796,"title":{},"body":{"index.html":{}}}],["color",{"_index":221,"title":{},"body":{"components/ErrorDialogComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["column",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{}}}],["command",{"_index":756,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":772,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{},"overview.html":{}}}],["conditions",{"_index":861,"title":{},"body":{"license.html":{}}}],["connecting",{"_index":408,"title":{},"body":{"components/HomeComponent.html":{}}}],["connection",{"_index":891,"title":{},"body":{"license.html":{}}}],["const",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"components/WidgetComponent.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":216,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["constructor(cdr",{"_index":304,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(data",{"_index":207,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["constructor(http",{"_index":487,"title":{},"body":{"injectables/WeatherIconService.html":{},"injectables/WeatherService.html":{}}}],["constructor(private",{"_index":499,"title":{},"body":{"injectables/WeatherIconService.html":{},"injectables/WeatherService.html":{},"components/WidgetComponent.html":{}}}],["constructor(weathericonservice",{"_index":571,"title":{},"body":{"components/WidgetComponent.html":{}}}],["content",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HomeComponent.html":{}}}],["context",{"_index":678,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":887,"title":{},"body":{"license.html":{}}}],["convertmpstokmh",{"_index":294,"title":{},"body":{"components/HomeComponent.html":{}}}],["convertmpstokmh(mps",{"_index":314,"title":{},"body":{"components/HomeComponent.html":{}}}],["coord",{"_index":252,"title":{},"body":{"interfaces/GetWeatherResponse.html":{}}}],["coordinates",{"_index":193,"title":{"interfaces/Coordinates.html":{}},"body":{"interfaces/Coordinates.html":{},"interfaces/GetWeatherResponse.html":{},"coverage.html":{}}}],["coordinates.model",{"_index":264,"title":{},"body":{"interfaces/GetWeatherResponse.html":{}}}],["copies",{"_index":855,"title":{},"body":{"license.html":{}}}],["copy",{"_index":839,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":825,"title":{},"body":{"license.html":{}}}],["core",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["corrêa",{"_index":831,"title":{},"body":{"license.html":{}}}],["countries",{"_index":564,"title":{},"body":{"components/WidgetComponent.html":{}}}],["country",{"_index":289,"title":{},"body":{"components/HomeComponent.html":{},"classes/Params.html":{},"interfaces/System.html":{},"injectables/WeatherService.html":{},"components/WidgetComponent.html":{}}}],["country/city",{"_index":731,"title":{},"body":{"index.html":{}}}],["countryid",{"_index":373,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/Widget.html":{}}}],["coverage",{"_index":654,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":773,"title":{},"body":{"index.html":{}}}],["createimagefromblob",{"_index":570,"title":{},"body":{"components/WidgetComponent.html":{}}}],["createimagefromblob(image",{"_index":573,"title":{},"body":{"components/WidgetComponent.html":{}}}],["current",{"_index":729,"title":{},"body":{"index.html":{}}}],["currentweather",{"_index":461,"title":{},"body":{"injectables/StorageService.html":{}}}],["custom_elements_schema",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["d9d9d9",{"_index":633,"title":{},"body":{"components/WidgetComponent.html":{}}}],["damages",{"_index":883,"title":{},"body":{"license.html":{}}}],["data",{"_index":206,"title":{},"body":{"components/ErrorDialogComponent.html":{},"components/HomeComponent.html":{},"components/WidgetComponent.html":{}}}],["data.city",{"_index":618,"title":{},"body":{"components/WidgetComponent.html":{}}}],["data.description",{"_index":625,"title":{},"body":{"components/WidgetComponent.html":{}}}],["data.humidity",{"_index":626,"title":{},"body":{"components/WidgetComponent.html":{}}}],["data.lat",{"_index":620,"title":{},"body":{"components/WidgetComponent.html":{}}}],["data.lon",{"_index":621,"title":{},"body":{"components/WidgetComponent.html":{}}}],["data.message",{"_index":217,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["data.temperature",{"_index":622,"title":{},"body":{"components/WidgetComponent.html":{}}}],["data.ts",{"_index":200,"title":{},"body":{"interfaces/DialogData.html":{},"coverage.html":{}}}],["data.windspeed",{"_index":628,"title":{},"body":{"components/WidgetComponent.html":{}}}],["date",{"_index":565,"title":{},"body":{"components/WidgetComponent.html":{}}}],["date_format",{"_index":566,"title":{},"body":{"components/WidgetComponent.html":{}}}],["days",{"_index":822,"title":{},"body":{"index.html":{}}}],["dd",{"_index":585,"title":{},"body":{"components/WidgetComponent.html":{}}}],["dddd",{"_index":583,"title":{},"body":{"components/WidgetComponent.html":{}}}],["deal",{"_index":842,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":892,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":211,"title":{},"body":{"components/ErrorDialogComponent.html":{},"components/HomeComponent.html":{}}}],["deep",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["default",{"_index":172,"title":{},"body":{"classes/AppRoutes.html":{},"components/HomeComponent.html":{},"injectables/StorageService.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"components/WidgetComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/AppRoutes.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"classes/Params.html":{},"injectables/StorageService.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"components/WidgetComponent.html":{}}}],["deg",{"_index":623,"title":{},"body":{"components/WidgetComponent.html":{},"interfaces/Wind.html":{}}}],["dependencies",{"_index":88,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":378,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/Weather.html":{},"interfaces/Widget.html":{},"index.html":{}}}],["dev",{"_index":764,"title":{},"body":{"index.html":{}}}],["development",{"_index":761,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":203,"title":{},"body":{"components/ErrorDialogComponent.html":{},"components/HomeComponent.html":{}}}],["dialog'},{'name",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["dialog.component",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{}}}],["dialog.component.html",{"_index":205,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["dialog.component.scss",{"_index":204,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["dialog.component.ts",{"_index":202,"title":{},"body":{"components/ErrorDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:10",{"_index":208,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["dialog.component.ts:11",{"_index":213,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["dialog/dialog",{"_index":199,"title":{},"body":{"interfaces/DialogData.html":{},"coverage.html":{}}}],["dialog/error",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"components/ErrorDialogComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["dialogdata",{"_index":197,"title":{"interfaces/DialogData.html":{}},"body":{"interfaces/DialogData.html":{},"components/ErrorDialogComponent.html":{},"coverage.html":{}}}],["direction",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{}}}],["directive",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["directives",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["directory",{"_index":785,"title":{},"body":{"index.html":{}}}],["display",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{}}}],["dist",{"_index":784,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":851,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":655,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["dt",{"_index":253,"title":{},"body":{"interfaces/GetWeatherResponse.html":{}}}],["due",{"_index":360,"title":{},"body":{"components/HomeComponent.html":{}}}],["dynamic",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":820,"title":{},"body":{"index.html":{}}}],["e2001a",{"_index":224,"title":{},"body":{"components/ErrorDialogComponent.html":{},"components/NotFoundComponent.html":{}}}],["e2e",{"_index":801,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":151,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":155,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":154,"title":{},"body":{"classes/AppPage.html":{}}}],["element",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["element(by.css('#look",{"_index":159,"title":{},"body":{"classes/AppPage.html":{}}}],["end",{"_index":800,"title":{},"body":{"index.html":{}}}],["enumerations",{"_index":703,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":497,"title":{},"body":{"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.api_key",{"_index":518,"title":{},"body":{"interceptors/WeatherInterceptor.html":{}}}],["environment.base_url",{"_index":549,"title":{},"body":{"injectables/WeatherService.html":{}}}],["environment.icon_append",{"_index":494,"title":{},"body":{"injectables/WeatherIconService.html":{}}}],["environment.icon_url",{"_index":495,"title":{},"body":{"injectables/WeatherIconService.html":{}}}],["envs/environment",{"_index":498,"title":{},"body":{"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{}}}],["error",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["errordialogcomponent",{"_index":69,"title":{"components/ErrorDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{},"coverage.html":{},"overview.html":{}}}],["event",{"_index":334,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["event.stoppropagation",{"_index":364,"title":{},"body":{"components/HomeComponent.html":{}}}],["execute",{"_index":793,"title":{},"body":{"index.html":{}}}],["expand",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["export",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppRoutes.html":{},"modules/AppRoutingModule.html":{},"interfaces/Clouds.html":{},"interfaces/Coordinates.html":{},"interfaces/DialogData.html":{},"components/ErrorDialogComponent.html":{},"interfaces/GetWeatherResponse.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"classes/Params.html":{},"injectables/StorageService.html":{},"interfaces/System.html":{},"interfaces/Temperature.html":{},"interfaces/Weather.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"interfaces/Widget.html":{},"components/WidgetComponent.html":{},"interfaces/Wind.html":{}}}],["exports",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":871,"title":{},"body":{"license.html":{}}}],["f0eeeb",{"_index":234,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["fahrenheit",{"_index":716,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["false",{"_index":341,"title":{},"body":{"components/HomeComponent.html":{},"components/WidgetComponent.html":{},"miscellaneous/variables.html":{}}}],["features",{"_index":725,"title":{},"body":{"index.html":{}}}],["feels_like",{"_index":475,"title":{},"body":{"interfaces/Temperature.html":{}}}],["field",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppRoutes.html":{},"modules/AppRoutingModule.html":{},"interfaces/Clouds.html":{},"interfaces/Coordinates.html":{},"interfaces/DialogData.html":{},"components/ErrorDialogComponent.html":{},"interfaces/GetWeatherResponse.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"classes/Params.html":{},"injectables/StorageService.html":{},"interfaces/System.html":{},"interfaces/Temperature.html":{},"interfaces/Weather.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"interfaces/Widget.html":{},"components/WidgetComponent.html":{},"interfaces/Wind.html":{},"coverage.html":{}}}],["filereader",{"_index":612,"title":{},"body":{"components/WidgetComponent.html":{}}}],["files",{"_index":770,"title":{},"body":{"index.html":{},"license.html":{}}}],["find",{"_index":749,"title":{},"body":{"index.html":{}}}],["findrandomcity",{"_index":295,"title":{},"body":{"components/HomeComponent.html":{}}}],["finds",{"_index":321,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["fitness",{"_index":876,"title":{},"body":{"license.html":{}}}],["flag",{"_index":567,"title":{},"body":{"components/WidgetComponent.html":{},"index.html":{}}}],["flex",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{}}}],["float",{"_index":652,"title":{},"body":{"components/WidgetComponent.html":{}}}],["folder",{"_index":754,"title":{},"body":{"index.html":{}}}],["following",{"_index":860,"title":{},"body":{"license.html":{}}}],["font",{"_index":238,"title":{},"body":{"components/ErrorDialogComponent.html":{},"components/NotFoundComponent.html":{},"index.html":{}}}],["form",{"_index":805,"title":{},"body":{"index.html":{}}}],["format(widgetcomponent.date_format",{"_index":599,"title":{},"body":{"components/WidgetComponent.html":{}}}],["formsmodule",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":175,"title":{},"body":{"classes/AppRoutes.html":{},"modules/AppRoutingModule.html":{},"components/NotFoundComponent.html":{}}}],["found'},{'name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["found.component",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.html",{"_index":420,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":419,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":418,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:11",{"_index":422,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":421,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["free",{"_index":835,"title":{},"body":{"license.html":{}}}],["from).tofixed(3",{"_index":404,"title":{},"body":{"components/HomeComponent.html":{}}}],["furnished",{"_index":858,"title":{},"body":{"license.html":{}}}],["generate",{"_index":798,"title":{},"body":{"index.html":{}}}],["geticon",{"_index":486,"title":{},"body":{"injectables/WeatherIconService.html":{}}}],["geticon(iconid",{"_index":491,"title":{},"body":{"injectables/WeatherIconService.html":{}}}],["getparagraphpagetitle",{"_index":152,"title":{},"body":{"classes/AppPage.html":{}}}],["getrandomcoordinate",{"_index":296,"title":{},"body":{"components/HomeComponent.html":{}}}],["getrandomcoordinate(from",{"_index":323,"title":{},"body":{"components/HomeComponent.html":{}}}],["getting",{"_index":718,"title":{"index.html":{},"license.html":{}},"body":{}}],["getweather",{"_index":297,"title":{},"body":{"components/HomeComponent.html":{}}}],["getweatherresponse",{"_index":248,"title":{"interfaces/GetWeatherResponse.html":{}},"body":{"interfaces/GetWeatherResponse.html":{},"components/HomeComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["getweatherwithlocation",{"_index":298,"title":{},"body":{"components/HomeComponent.html":{}}}],["getweatherwithlocation(country",{"_index":327,"title":{},"body":{"components/HomeComponent.html":{}}}],["getwithlatlon",{"_index":539,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getwithlatlon(lat",{"_index":545,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getwithlocation",{"_index":540,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getwithlocation(country",{"_index":547,"title":{},"body":{"injectables/WeatherService.html":{}}}],["granted",{"_index":834,"title":{},"body":{"license.html":{}}}],["graph",{"_index":896,"title":{},"body":{"modules.html":{}}}],["grey",{"_index":220,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["grow",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["h1",{"_index":235,"title":{},"body":{"components/ErrorDialogComponent.html":{},"components/NotFoundComponent.html":{}}}],["header",{"_index":272,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["header.component.html",{"_index":274,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":273,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":72,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["here",{"_index":414,"title":{},"body":{"components/HomeComponent.html":{}}}],["hereby",{"_index":833,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":648,"title":{},"body":{"components/WidgetComponent.html":{}}}],["holders",{"_index":880,"title":{},"body":{"license.html":{}}}],["home",{"_index":168,"title":{},"body":{"classes/AppRoutes.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["home.component.html",{"_index":287,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":286,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":74,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{},"coverage.html":{},"overview.html":{}}}],["host",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["hours",{"_index":821,"title":{},"body":{"index.html":{}}}],["html",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["http",{"_index":490,"title":{},"body":{"injectables/WeatherIconService.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["http://localhost:4200",{"_index":766,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":780,"title":{},"body":{"index.html":{}}}],["http://openweathermap.org/img/wn",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":488,"title":{},"body":{"injectables/WeatherIconService.html":{},"injectables/WeatherService.html":{}}}],["httpclientmodule",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":523,"title":{},"body":{"interceptors/WeatherInterceptor.html":{}}}],["httphandler",{"_index":515,"title":{},"body":{"interceptors/WeatherInterceptor.html":{}}}],["httpinterceptor",{"_index":524,"title":{},"body":{"interceptors/WeatherInterceptor.html":{}}}],["httpparams",{"_index":544,"title":{},"body":{"injectables/WeatherService.html":{}}}],["httpparams.append(key",{"_index":558,"title":{},"body":{"injectables/WeatherService.html":{}}}],["httprequest",{"_index":513,"title":{},"body":{"interceptors/WeatherInterceptor.html":{}}}],["https://api.openweathermap.org/data/2.5/weather",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["humidity",{"_index":380,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/Temperature.html":{},"interfaces/Widget.html":{},"components/WidgetComponent.html":{}}}],["icon",{"_index":385,"title":{},"body":{"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/Weather.html":{},"interfaces/Widget.html":{},"components/WidgetComponent.html":{}}}],["icon.service",{"_index":592,"title":{},"body":{"components/WidgetComponent.html":{}}}],["icon.service.ts",{"_index":483,"title":{},"body":{"injectables/WeatherIconService.html":{},"coverage.html":{}}}],["icon.service.ts:10",{"_index":496,"title":{},"body":{"injectables/WeatherIconService.html":{}}}],["icon.service.ts:11",{"_index":489,"title":{},"body":{"injectables/WeatherIconService.html":{}}}],["icon.service.ts:15",{"_index":492,"title":{},"body":{"injectables/WeatherIconService.html":{}}}],["icon_append",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon_url",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconappend",{"_index":484,"title":{},"body":{"injectables/WeatherIconService.html":{}}}],["iconid",{"_index":493,"title":{},"body":{"injectables/WeatherIconService.html":{}}}],["iconname",{"_index":605,"title":{},"body":{"components/WidgetComponent.html":{}}}],["iconpath",{"_index":485,"title":{},"body":{"injectables/WeatherIconService.html":{}}}],["id",{"_index":254,"title":{},"body":{"interfaces/GetWeatherResponse.html":{},"interfaces/System.html":{},"interfaces/Weather.html":{}}}],["identifier",{"_index":656,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":575,"title":{},"body":{"components/WidgetComponent.html":{}}}],["imperial",{"_index":717,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["implements",{"_index":270,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"interceptors/WeatherInterceptor.html":{},"components/WidgetComponent.html":{}}}],["implied",{"_index":872,"title":{},"body":{"license.html":{}}}],["import",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/ErrorDialogComponent.html":{},"interfaces/GetWeatherResponse.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"injectables/StorageService.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"components/WidgetComponent.html":{}}}],["imports",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["improve",{"_index":810,"title":{},"body":{"index.html":{}}}],["include",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/WidgetComponent.html":{}}}],["included",{"_index":865,"title":{},"body":{"license.html":{}}}],["including",{"_index":845,"title":{},"body":{"license.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/AppRoutes.html":{},"interfaces/Clouds.html":{},"interfaces/Coordinates.html":{},"interfaces/DialogData.html":{},"components/ErrorDialogComponent.html":{},"interfaces/GetWeatherResponse.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"classes/Params.html":{},"injectables/StorageService.html":{},"interfaces/System.html":{},"interfaces/Temperature.html":{},"interfaces/Weather.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"interfaces/Widget.html":{},"components/WidgetComponent.html":{},"interfaces/Wind.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppRoutes.html":{},"modules/AppRoutingModule.html":{},"interfaces/Clouds.html":{},"interfaces/Coordinates.html":{},"interfaces/DialogData.html":{},"components/ErrorDialogComponent.html":{},"interfaces/GetWeatherResponse.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"classes/Params.html":{},"injectables/StorageService.html":{},"interfaces/System.html":{},"interfaces/Temperature.html":{},"interfaces/Weather.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"interfaces/Widget.html":{},"components/WidgetComponent.html":{},"interfaces/Wind.html":{}}}],["information",{"_index":726,"title":{},"body":{"index.html":{}}}],["inject",{"_index":214,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["inject(mat_dialog_data",{"_index":212,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["injectable",{"_index":452,"title":{"injectables/StorageService.html":{},"injectables/WeatherIconService.html":{},"injectables/WeatherService.html":{}},"body":{"injectables/StorageService.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["injectables",{"_index":453,"title":{},"body":{"injectables/StorageService.html":{},"injectables/WeatherIconService.html":{},"injectables/WeatherService.html":{},"overview.html":{}}}],["inputs",{"_index":809,"title":{},"body":{"index.html":{}}}],["install",{"_index":759,"title":{},"body":{"index.html":{}}}],["installed",{"_index":748,"title":{},"body":{"index.html":{}}}],["installthis",{"_index":758,"title":{},"body":{"index.html":{}}}],["integration",{"_index":817,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":510,"title":{},"body":{"interceptors/WeatherInterceptor.html":{}}}],["intercept(request",{"_index":512,"title":{},"body":{"interceptors/WeatherInterceptor.html":{}}}],["interceptor",{"_index":504,"title":{"interceptors/WeatherInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":505,"title":{},"body":{"interceptors/WeatherInterceptor.html":{}}}],["interface",{"_index":188,"title":{"interfaces/Clouds.html":{},"interfaces/Coordinates.html":{},"interfaces/DialogData.html":{},"interfaces/GetWeatherResponse.html":{},"interfaces/System.html":{},"interfaces/Temperature.html":{},"interfaces/Weather.html":{},"interfaces/Widget.html":{},"interfaces/Wind.html":{}},"body":{"interfaces/Clouds.html":{},"interfaces/Coordinates.html":{},"interfaces/DialogData.html":{},"interfaces/GetWeatherResponse.html":{},"interfaces/System.html":{},"interfaces/Temperature.html":{},"interfaces/Weather.html":{},"interfaces/Widget.html":{},"interfaces/Wind.html":{},"coverage.html":{}}}],["interfaces",{"_index":190,"title":{},"body":{"interfaces/Clouds.html":{},"interfaces/Coordinates.html":{},"interfaces/DialogData.html":{},"interfaces/GetWeatherResponse.html":{},"interfaces/System.html":{},"interfaces/Temperature.html":{},"interfaces/Weather.html":{},"interfaces/Widget.html":{},"interfaces/Wind.html":{},"overview.html":{}}}],["isimageloading",{"_index":568,"title":{},"body":{"components/WidgetComponent.html":{}}}],["items",{"_index":226,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["itself",{"_index":777,"title":{},"body":{"index.html":{}}}],["js",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["json.parse(localstorage.getitem(storageservice.key_weather",{"_index":470,"title":{},"body":{"injectables/StorageService.html":{}}}],["json.stringify(currentweather",{"_index":469,"title":{},"body":{"injectables/StorageService.html":{}}}],["justify",{"_index":228,"title":{},"body":{"components/ErrorDialogComponent.html":{},"components/HomeComponent.html":{}}}],["karma",{"_index":794,"title":{},"body":{"index.html":{}}}],["keep",{"_index":318,"title":{},"body":{"components/HomeComponent.html":{}}}],["kelvin",{"_index":712,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["key_weather",{"_index":455,"title":{},"body":{"injectables/StorageService.html":{}}}],["kind",{"_index":870,"title":{},"body":{"license.html":{}}}],["km/h",{"_index":629,"title":{},"body":{"components/WidgetComponent.html":{}}}],["lat",{"_index":195,"title":{},"body":{"interfaces/Coordinates.html":{},"components/HomeComponent.html":{},"classes/Params.html":{},"injectables/WeatherService.html":{},"interfaces/Widget.html":{},"miscellaneous/enumerations.html":{}}}],["lat.to",{"_index":398,"title":{},"body":{"components/HomeComponent.html":{}}}],["lat/lon",{"_index":619,"title":{},"body":{"components/WidgetComponent.html":{}}}],["latitude",{"_index":396,"title":{},"body":{"components/HomeComponent.html":{}}}],["layout",{"_index":813,"title":{},"body":{"index.html":{}}}],["left",{"_index":651,"title":{},"body":{"components/WidgetComponent.html":{}}}],["legend",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{},"overview.html":{}}}],["liability",{"_index":884,"title":{},"body":{"license.html":{}}}],["liable",{"_index":881,"title":{},"body":{"license.html":{}}}],["license",{"_index":823,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":846,"title":{},"body":{"license.html":{}}}],["limited",{"_index":873,"title":{},"body":{"license.html":{}}}],["line",{"_index":426,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["list",{"_index":803,"title":{},"body":{"index.html":{}}}],["load",{"_index":614,"title":{},"body":{"components/WidgetComponent.html":{}}}],["loadweather",{"_index":456,"title":{},"body":{"injectables/StorageService.html":{}}}],["local",{"_index":775,"title":{},"body":{"index.html":{}}}],["localstorage.removeitem(storageservice.key_weather",{"_index":466,"title":{},"body":{"injectables/StorageService.html":{}}}],["localstorage.setitem",{"_index":467,"title":{},"body":{"injectables/StorageService.html":{}}}],["lon",{"_index":196,"title":{},"body":{"interfaces/Coordinates.html":{},"components/HomeComponent.html":{},"classes/Params.html":{},"injectables/WeatherService.html":{},"interfaces/Widget.html":{},"miscellaneous/enumerations.html":{}}}],["lon.to",{"_index":401,"title":{},"body":{"components/HomeComponent.html":{}}}],["longitude",{"_index":399,"title":{},"body":{"components/HomeComponent.html":{}}}],["look",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"index.html":{}}}],["lt",{"_index":586,"title":{},"body":{"components/WidgetComponent.html":{}}}],["main",{"_index":255,"title":{},"body":{"interfaces/GetWeatherResponse.html":{},"interfaces/Weather.html":{}}}],["map",{"_index":351,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["map((weather",{"_index":390,"title":{},"body":{"components/HomeComponent.html":{}}}],["marco",{"_index":828,"title":{},"body":{"license.html":{}}}],["margin",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["mat",{"_index":160,"title":{},"body":{"classes/AppPage.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{}}}],["mat_dialog_data",{"_index":215,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["matbuttonmodule",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppRoutes.html":{},"modules/AppRoutingModule.html":{},"interfaces/Clouds.html":{},"interfaces/Coordinates.html":{},"interfaces/DialogData.html":{},"components/ErrorDialogComponent.html":{},"interfaces/GetWeatherResponse.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"classes/Params.html":{},"injectables/StorageService.html":{},"interfaces/System.html":{},"interfaces/Temperature.html":{},"interfaces/Weather.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"interfaces/Widget.html":{},"components/WidgetComponent.html":{},"interfaces/Wind.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":306,"title":{},"body":{"components/HomeComponent.html":{}}}],["matdialogmodule",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["material",{"_index":740,"title":{},"body":{"index.html":{}}}],["matformfieldmodule",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["math.random",{"_index":403,"title":{},"body":{"components/HomeComponent.html":{}}}],["matinputmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["maximum",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["merchantability",{"_index":875,"title":{},"body":{"license.html":{}}}],["merge",{"_index":849,"title":{},"body":{"license.html":{}}}],["message",{"_index":201,"title":{},"body":{"interfaces/DialogData.html":{},"components/HomeComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["methods",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"classes/Params.html":{},"injectables/StorageService.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"components/WidgetComponent.html":{}}}],["metric",{"_index":715,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["min",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{}}}],["miscellaneous",{"_index":702,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":824,"title":{},"body":{"license.html":{}}}],["mmmm",{"_index":584,"title":{},"body":{"components/WidgetComponent.html":{}}}],["modify",{"_index":848,"title":{},"body":{"license.html":{}}}],["module",{"_index":85,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":87,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":593,"title":{},"body":{"components/WidgetComponent.html":{},"dependencies.html":{},"index.html":{}}}],["more",{"_index":814,"title":{},"body":{"index.html":{}}}],["mps",{"_index":316,"title":{},"body":{"components/HomeComponent.html":{}}}],["multi",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"interfaces/GetWeatherResponse.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"classes/Params.html":{},"injectables/StorageService.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"components/WidgetComponent.html":{}}}],["navigate",{"_index":765,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":153,"title":{},"body":{"classes/AppPage.html":{}}}],["need",{"_index":746,"title":{},"body":{"index.html":{}}}],["new",{"_index":552,"title":{},"body":{"injectables/WeatherService.html":{},"components/WidgetComponent.html":{},"coverage.html":{}}}],["next",{"_index":514,"title":{},"body":{"interceptors/WeatherInterceptor.html":{},"index.html":{}}}],["next.handle(req",{"_index":535,"title":{},"body":{"interceptors/WeatherInterceptor.html":{}}}],["next.handle(request",{"_index":527,"title":{},"body":{"interceptors/WeatherInterceptor.html":{}}}],["ng",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":299,"title":{},"body":{"components/HomeComponent.html":{}}}],["ngmodule",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["no_errors_schema",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["node",{"_index":747,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":750,"title":{},"body":{"index.html":{}}}],["none",{"_index":282,"title":{},"body":{"components/HeaderComponent.html":{}}}],["noninfringement",{"_index":878,"title":{},"body":{"license.html":{}}}],["not_found",{"_index":169,"title":{},"body":{"classes/AppRoutes.html":{}}}],["notfoundcomponent",{"_index":76,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notice",{"_index":863,"title":{},"body":{"license.html":{}}}],["npm",{"_index":757,"title":{},"body":{"index.html":{}}}],["null",{"_index":609,"title":{},"body":{"components/WidgetComponent.html":{}}}],["number",{"_index":192,"title":{},"body":{"interfaces/Clouds.html":{},"interfaces/Coordinates.html":{},"interfaces/GetWeatherResponse.html":{},"components/HomeComponent.html":{},"interfaces/System.html":{},"interfaces/Temperature.html":{},"interfaces/Weather.html":{},"interfaces/Widget.html":{},"interfaces/Wind.html":{}}}],["object",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(params).foreach((key",{"_index":557,"title":{},"body":{"injectables/WeatherService.html":{}}}],["observable",{"_index":326,"title":{},"body":{"components/HomeComponent.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{}}}],["obtaining",{"_index":838,"title":{},"body":{"license.html":{}}}],["oninit",{"_index":271,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["open",{"_index":742,"title":{},"body":{"index.html":{}}}],["opitionaly",{"_index":795,"title":{},"body":{"index.html":{}}}],["optional",{"_index":210,"title":{},"body":{"components/ErrorDialogComponent.html":{},"components/HomeComponent.html":{},"classes/Params.html":{},"injectables/StorageService.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"components/WidgetComponent.html":{}}}],["options",{"_index":819,"title":{},"body":{"index.html":{}}}],["order",{"_index":797,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":889,"title":{},"body":{"license.html":{}}}],["out",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"license.html":{},"overview.html":{}}}],["outlet",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["overall",{"_index":812,"title":{},"body":{"index.html":{}}}],["overflow",{"_index":647,"title":{},"body":{"components/WidgetComponent.html":{}}}],["overview",{"_index":897,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":682,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":636,"title":{},"body":{"components/WidgetComponent.html":{}}}],["page",{"_index":423,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["parameters",{"_index":209,"title":{},"body":{"components/ErrorDialogComponent.html":{},"components/HomeComponent.html":{},"classes/Params.html":{},"injectables/StorageService.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"components/WidgetComponent.html":{}}}],["params",{"_index":431,"title":{"classes/Params.html":{}},"body":{"classes/Params.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["params().withcountry(country).withcity(city",{"_index":553,"title":{},"body":{"injectables/WeatherService.html":{}}}],["params().withlat(lat).withlon(lon",{"_index":556,"title":{},"body":{"injectables/WeatherService.html":{}}}],["params[key",{"_index":559,"title":{},"body":{"injectables/WeatherService.html":{}}}],["particular",{"_index":877,"title":{},"body":{"license.html":{}}}],["path",{"_index":185,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["permission",{"_index":832,"title":{},"body":{"license.html":{}}}],["permit",{"_index":856,"title":{},"body":{"license.html":{}}}],["person",{"_index":837,"title":{},"body":{"license.html":{}}}],["persons",{"_index":857,"title":{},"body":{"license.html":{}}}],["portions",{"_index":867,"title":{},"body":{"license.html":{}}}],["position",{"_index":630,"title":{},"body":{"components/WidgetComponent.html":{}}}],["prefix",{"_index":569,"title":{},"body":{"components/WidgetComponent.html":{}}}],["pressure",{"_index":476,"title":{},"body":{"interfaces/Temperature.html":{}}}],["prevent",{"_index":359,"title":{},"body":{"components/HomeComponent.html":{}}}],["previous",{"_index":734,"title":{},"body":{"index.html":{}}}],["private",{"_index":291,"title":{},"body":{"components/HomeComponent.html":{},"injectables/StorageService.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"components/WidgetComponent.html":{}}}],["prod",{"_index":787,"title":{},"body":{"index.html":{}}}],["production",{"_index":788,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":721,"title":{},"body":{"index.html":{}}}],["properties",{"_index":165,"title":{},"body":{"classes/AppRoutes.html":{},"interfaces/Clouds.html":{},"interfaces/Coordinates.html":{},"interfaces/DialogData.html":{},"components/ErrorDialogComponent.html":{},"interfaces/GetWeatherResponse.html":{},"components/HomeComponent.html":{},"classes/Params.html":{},"injectables/StorageService.html":{},"interfaces/System.html":{},"interfaces/Temperature.html":{},"interfaces/Weather.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"interfaces/Widget.html":{},"components/WidgetComponent.html":{},"interfaces/Wind.html":{}}}],["protractor",{"_index":156,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":868,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":465,"title":{},"body":{"injectables/StorageService.html":{},"injectables/WeatherIconService.html":{},"injectables/WeatherService.html":{}}}],["providers",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":177,"title":{},"body":{"classes/AppRoutes.html":{},"components/ErrorDialogComponent.html":{},"injectables/StorageService.html":{},"injectables/WeatherIconService.html":{},"injectables/WeatherService.html":{}}}],["publish",{"_index":850,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":720,"title":{},"body":{"index.html":{},"license.html":{}}}],["q",{"_index":433,"title":{},"body":{"classes/Params.html":{}}}],["radius",{"_index":634,"title":{},"body":{"components/WidgetComponent.html":{}}}],["random",{"_index":413,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["randomweather",{"_index":300,"title":{},"body":{"components/HomeComponent.html":{}}}],["reader",{"_index":611,"title":{},"body":{"components/WidgetComponent.html":{}}}],["reader.addeventlistener",{"_index":613,"title":{},"body":{"components/WidgetComponent.html":{}}}],["reader.readasdataurl(image",{"_index":617,"title":{},"body":{"components/WidgetComponent.html":{}}}],["reader.result",{"_index":616,"title":{},"body":{"components/WidgetComponent.html":{}}}],["readonly",{"_index":167,"title":{},"body":{"classes/AppRoutes.html":{}}}],["redirectto",{"_index":186,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["relative",{"_index":631,"title":{},"body":{"components/WidgetComponent.html":{}}}],["reload",{"_index":768,"title":{},"body":{"index.html":{}}}],["renew",{"_index":774,"title":{},"body":{"index.html":{}}}],["req",{"_index":528,"title":{},"body":{"interceptors/WeatherInterceptor.html":{}}}],["request",{"_index":517,"title":{},"body":{"interceptors/WeatherInterceptor.html":{}}}],["request.clone",{"_index":529,"title":{},"body":{"interceptors/WeatherInterceptor.html":{}}}],["request.params",{"_index":530,"title":{},"body":{"interceptors/WeatherInterceptor.html":{}}}],["request.url.indexof(environment.base_url",{"_index":526,"title":{},"body":{"interceptors/WeatherInterceptor.html":{}}}],["require",{"_index":679,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require('@mockdata/countriesiso.json",{"_index":578,"title":{},"body":{"components/WidgetComponent.html":{}}}],["require.context",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":313,"title":{},"body":{"components/HomeComponent.html":{}}}],["res.coord.lat",{"_index":376,"title":{},"body":{"components/HomeComponent.html":{}}}],["res.coord.lon",{"_index":377,"title":{},"body":{"components/HomeComponent.html":{}}}],["res.main.humidity",{"_index":381,"title":{},"body":{"components/HomeComponent.html":{}}}],["res.main.temp",{"_index":375,"title":{},"body":{"components/HomeComponent.html":{}}}],["res.name",{"_index":372,"title":{},"body":{"components/HomeComponent.html":{}}}],["res.sys.country",{"_index":374,"title":{},"body":{"components/HomeComponent.html":{}}}],["res.timezone",{"_index":384,"title":{},"body":{"components/HomeComponent.html":{}}}],["res.weather[0].description",{"_index":379,"title":{},"body":{"components/HomeComponent.html":{}}}],["res.weather[0].icon",{"_index":386,"title":{},"body":{"components/HomeComponent.html":{}}}],["reset",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["responsetype",{"_index":502,"title":{},"body":{"injectables/WeatherIconService.html":{}}}],["responsiveness",{"_index":811,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":844,"title":{},"body":{"license.html":{}}}],["result",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppRoutes.html":{},"modules/AppRoutingModule.html":{},"interfaces/Clouds.html":{},"interfaces/Coordinates.html":{},"interfaces/DialogData.html":{},"components/ErrorDialogComponent.html":{},"interfaces/GetWeatherResponse.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"classes/Params.html":{},"injectables/StorageService.html":{},"interfaces/System.html":{},"interfaces/Temperature.html":{},"interfaces/Weather.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"interfaces/Widget.html":{},"components/WidgetComponent.html":{},"interfaces/Wind.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppRoutes.html":{},"modules/AppRoutingModule.html":{},"interfaces/Clouds.html":{},"interfaces/Coordinates.html":{},"interfaces/DialogData.html":{},"components/ErrorDialogComponent.html":{},"interfaces/GetWeatherResponse.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"classes/Params.html":{},"injectables/StorageService.html":{},"interfaces/System.html":{},"interfaces/Temperature.html":{},"interfaces/Weather.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"interfaces/Widget.html":{},"components/WidgetComponent.html":{},"interfaces/Wind.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":157,"title":{},"body":{"classes/AppPage.html":{},"components/HomeComponent.html":{},"classes/Params.html":{},"injectables/StorageService.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{}}}],["returns",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"classes/Params.html":{},"injectables/StorageService.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"components/WidgetComponent.html":{}}}],["right",{"_index":240,"title":{},"body":{"components/ErrorDialogComponent.html":{},"components/WidgetComponent.html":{}}}],["rights",{"_index":847,"title":{},"body":{"license.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/StorageService.html":{},"injectables/WeatherIconService.html":{},"injectables/WeatherService.html":{}}}],["root'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["router",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodule",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":187,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":181,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":755,"title":{},"body":{"index.html":{}}}],["running",{"_index":789,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":349,"title":{},"body":{"components/HomeComponent.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":352,"title":{},"body":{"components/HomeComponent.html":{}}}],["saveweather",{"_index":457,"title":{},"body":{"injectables/StorageService.html":{}}}],["saveweather(currentweather",{"_index":459,"title":{},"body":{"injectables/StorageService.html":{}}}],["schemas",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["search",{"_index":301,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["search(event",{"_index":332,"title":{},"body":{"components/HomeComponent.html":{}}}],["see",{"_index":412,"title":{},"body":{"components/HomeComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["sell",{"_index":854,"title":{},"body":{"license.html":{}}}],["serve",{"_index":763,"title":{},"body":{"index.html":{}}}],["server",{"_index":762,"title":{},"body":{"index.html":{}}}],["servers",{"_index":409,"title":{},"body":{"components/HomeComponent.html":{}}}],["services/storage/storage.service",{"_index":345,"title":{},"body":{"components/HomeComponent.html":{}}}],["services/weather/shared/getweatherresponse.model",{"_index":346,"title":{},"body":{"components/HomeComponent.html":{}}}],["services/weather/weather.interceptor",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["services/weather/weather.service",{"_index":347,"title":{},"body":{"components/HomeComponent.html":{}}}],["services/weathericon/weather",{"_index":591,"title":{},"body":{"components/WidgetComponent.html":{}}}],["set(weatherinterceptor.app_id",{"_index":531,"title":{},"body":{"interceptors/WeatherInterceptor.html":{}}}],["set(weatherinterceptor.untis",{"_index":533,"title":{},"body":{"interceptors/WeatherInterceptor.html":{}}}],["setting",{"_index":743,"title":{},"body":{"index.html":{}}}],["shadow",{"_index":640,"title":{},"body":{"components/WidgetComponent.html":{}}}],["shall",{"_index":864,"title":{},"body":{"license.html":{}}}],["shared/error",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{}}}],["shared/getweatherresponse.model",{"_index":550,"title":{},"body":{"injectables/WeatherService.html":{}}}],["shared/header/header.component",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/latitude.enum",{"_index":353,"title":{},"body":{"components/HomeComponent.html":{}}}],["shared/longitude.enum",{"_index":354,"title":{},"body":{"components/HomeComponent.html":{}}}],["shared/not",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["shared/parameters.model",{"_index":551,"title":{},"body":{"injectables/WeatherService.html":{}}}],["shared/routes",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["shared/units.enum",{"_index":525,"title":{},"body":{"interceptors/WeatherInterceptor.html":{}}}],["showerror",{"_index":302,"title":{},"body":{"components/HomeComponent.html":{}}}],["showloading",{"_index":290,"title":{},"body":{"components/HomeComponent.html":{}}}],["size",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/NotFoundComponent.html":{}}}],["sky",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/HeaderComponent.html":{},"index.html":{}}}],["sky_weather",{"_index":462,"title":{},"body":{"injectables/StorageService.html":{}}}],["software",{"_index":840,"title":{},"body":{"license.html":{}}}],["solid",{"_index":233,"title":{},"body":{"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppRoutes.html":{},"modules/AppRoutingModule.html":{},"interfaces/Clouds.html":{},"interfaces/Coordinates.html":{},"interfaces/DialogData.html":{},"components/ErrorDialogComponent.html":{},"interfaces/GetWeatherResponse.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"classes/Params.html":{},"injectables/StorageService.html":{},"interfaces/System.html":{},"interfaces/Temperature.html":{},"interfaces/Weather.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"interfaces/Widget.html":{},"components/WidgetComponent.html":{},"interfaces/Wind.html":{},"index.html":{}}}],["span')).gettext",{"_index":162,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["speed",{"_index":627,"title":{},"body":{"components/WidgetComponent.html":{},"interfaces/Wind.html":{}}}],["spinner",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["src/.../environment.development.ts",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.production.ts",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.staging.ts",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.test.ts",{"_index":905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../latitude.enum.ts",{"_index":704,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../longitude.enum.ts",{"_index":705,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../units.enum.ts",{"_index":706,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:8",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/home/home.component.ts",{"_index":284,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:110",{"_index":328,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:114",{"_index":325,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:121",{"_index":324,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:125",{"_index":315,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:129",{"_index":335,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:27",{"_index":343,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:28",{"_index":339,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:29",{"_index":338,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:30",{"_index":309,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:39",{"_index":330,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:41",{"_index":329,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:47",{"_index":333,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:63",{"_index":331,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:75",{"_index":312,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:90",{"_index":337,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:98",{"_index":317,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/services/storage/storage.service.ts",{"_index":454,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["src/app/services/storage/storage.service.ts:10",{"_index":460,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage/storage.service.ts:18",{"_index":458,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage/storage.service.ts:8",{"_index":463,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/weather/shared/clouds.model.ts",{"_index":191,"title":{},"body":{"interfaces/Clouds.html":{},"coverage.html":{}}}],["src/app/services/weather/shared/coordinates.model.ts",{"_index":194,"title":{},"body":{"interfaces/Coordinates.html":{},"coverage.html":{}}}],["src/app/services/weather/shared/getweatherresponse.model.ts",{"_index":249,"title":{},"body":{"interfaces/GetWeatherResponse.html":{},"coverage.html":{}}}],["src/app/services/weather/shared/parameters.model.ts",{"_index":432,"title":{},"body":{"classes/Params.html":{},"coverage.html":{}}}],["src/app/services/weather/shared/parameters.model.ts:11",{"_index":448,"title":{},"body":{"classes/Params.html":{}}}],["src/app/services/weather/shared/parameters.model.ts:16",{"_index":444,"title":{},"body":{"classes/Params.html":{}}}],["src/app/services/weather/shared/parameters.model.ts:2",{"_index":438,"title":{},"body":{"classes/Params.html":{}}}],["src/app/services/weather/shared/parameters.model.ts:25",{"_index":442,"title":{},"body":{"classes/Params.html":{}}}],["src/app/services/weather/shared/parameters.model.ts:3",{"_index":439,"title":{},"body":{"classes/Params.html":{}}}],["src/app/services/weather/shared/parameters.model.ts:4",{"_index":440,"title":{},"body":{"classes/Params.html":{}}}],["src/app/services/weather/shared/parameters.model.ts:6",{"_index":446,"title":{},"body":{"classes/Params.html":{}}}],["src/app/services/weather/shared/system.model.ts",{"_index":471,"title":{},"body":{"interfaces/System.html":{},"coverage.html":{}}}],["src/app/services/weather/shared/temperature.model.ts",{"_index":474,"title":{},"body":{"interfaces/Temperature.html":{},"coverage.html":{}}}],["src/app/services/weather/shared/units.enum.ts",{"_index":711,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/services/weather/shared/weather.model.ts",{"_index":480,"title":{},"body":{"interfaces/Weather.html":{},"coverage.html":{}}}],["src/app/services/weather/shared/wind.model.ts",{"_index":653,"title":{},"body":{"interfaces/Wind.html":{},"coverage.html":{}}}],["src/app/services/weather/weather.interceptor.ts",{"_index":506,"title":{},"body":{"interceptors/WeatherInterceptor.html":{},"coverage.html":{}}}],["src/app/services/weather/weather.interceptor.ts:14",{"_index":519,"title":{},"body":{"interceptors/WeatherInterceptor.html":{}}}],["src/app/services/weather/weather.interceptor.ts:15",{"_index":521,"title":{},"body":{"interceptors/WeatherInterceptor.html":{}}}],["src/app/services/weather/weather.interceptor.ts:16",{"_index":511,"title":{},"body":{"interceptors/WeatherInterceptor.html":{}}}],["src/app/services/weather/weather.interceptor.ts:20",{"_index":516,"title":{},"body":{"interceptors/WeatherInterceptor.html":{}}}],["src/app/services/weather/weather.service.ts",{"_index":536,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["src/app/services/weather/weather.service.ts:12",{"_index":541,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/services/weather/weather.service.ts:16",{"_index":548,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/services/weather/weather.service.ts:27",{"_index":546,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/services/weather/weather.service.ts:38",{"_index":543,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/services/weathericon/weather",{"_index":482,"title":{},"body":{"injectables/WeatherIconService.html":{},"coverage.html":{}}}],["src/app/shared/error",{"_index":198,"title":{},"body":{"interfaces/DialogData.html":{},"components/ErrorDialogComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts",{"_index":269,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts:11",{"_index":276,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:8",{"_index":275,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/latitude.enum.ts",{"_index":707,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/longitude.enum.ts",{"_index":709,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/not",{"_index":417,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/shared/routes.ts",{"_index":164,"title":{},"body":{"classes/AppRoutes.html":{},"coverage.html":{}}}],["src/app/shared/routes.ts:2",{"_index":174,"title":{},"body":{"classes/AppRoutes.html":{}}}],["src/app/shared/routes.ts:3",{"_index":176,"title":{},"body":{"classes/AppRoutes.html":{}}}],["src/app/widget/widget.component.ts",{"_index":561,"title":{},"body":{"components/WidgetComponent.html":{},"coverage.html":{}}}],["src/app/widget/widget.component.ts:12",{"_index":579,"title":{},"body":{"components/WidgetComponent.html":{}}}],["src/app/widget/widget.component.ts:13",{"_index":589,"title":{},"body":{"components/WidgetComponent.html":{}}}],["src/app/widget/widget.component.ts:14",{"_index":590,"title":{},"body":{"components/WidgetComponent.html":{}}}],["src/app/widget/widget.component.ts:15",{"_index":580,"title":{},"body":{"components/WidgetComponent.html":{}}}],["src/app/widget/widget.component.ts:16",{"_index":587,"title":{},"body":{"components/WidgetComponent.html":{}}}],["src/app/widget/widget.component.ts:17",{"_index":582,"title":{},"body":{"components/WidgetComponent.html":{}}}],["src/app/widget/widget.component.ts:18",{"_index":588,"title":{},"body":{"components/WidgetComponent.html":{}}}],["src/app/widget/widget.component.ts:19",{"_index":581,"title":{},"body":{"components/WidgetComponent.html":{}}}],["src/app/widget/widget.component.ts:21",{"_index":572,"title":{},"body":{"components/WidgetComponent.html":{}}}],["src/app/widget/widget.component.ts:24",{"_index":576,"title":{},"body":{"components/WidgetComponent.html":{}}}],["src/app/widget/widget.component.ts:26",{"_index":577,"title":{},"body":{"components/WidgetComponent.html":{}}}],["src/app/widget/widget.component.ts:45",{"_index":574,"title":{},"body":{"components/WidgetComponent.html":{}}}],["src/app/widget/widget.model",{"_index":464,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/widget/widget.model.ts",{"_index":560,"title":{},"body":{"interfaces/Widget.html":{},"coverage.html":{}}}],["src/environments/environment.development.ts",{"_index":670,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.production.ts",{"_index":673,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.staging.ts",{"_index":674,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.test.ts",{"_index":675,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":676,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/styles/mixins.scss",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/WidgetComponent.html":{}}}],["src/test.ts",{"_index":677,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":737,"title":{},"body":{"index.html":{}}}],["standard",{"_index":713,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["started",{"_index":719,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":166,"title":{},"body":{"classes/AppRoutes.html":{},"injectables/StorageService.html":{},"interceptors/WeatherInterceptor.html":{},"components/WidgetComponent.html":{},"index.html":{}}}],["storageservice",{"_index":308,"title":{"injectables/StorageService.html":{}},"body":{"components/HomeComponent.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["storageservice.key_weather",{"_index":468,"title":{},"body":{"injectables/StorageService.html":{}}}],["stored",{"_index":783,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":733,"title":{},"body":{"index.html":{}}}],["string",{"_index":171,"title":{},"body":{"classes/AppRoutes.html":{},"interfaces/DialogData.html":{},"interfaces/GetWeatherResponse.html":{},"components/HomeComponent.html":{},"classes/Params.html":{},"injectables/StorageService.html":{},"interfaces/System.html":{},"interfaces/Weather.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"interfaces/Widget.html":{},"components/WidgetComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["subject",{"_index":859,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":852,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":866,"title":{},"body":{"license.html":{}}}],["sunrise",{"_index":472,"title":{},"body":{"interfaces/System.html":{}}}],["sunset",{"_index":473,"title":{},"body":{"interfaces/System.html":{}}}],["support",{"_index":893,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":894,"title":{},"body":{"modules.html":{}}}],["sys",{"_index":256,"title":{},"body":{"interfaces/GetWeatherResponse.html":{}}}],["system",{"_index":261,"title":{"interfaces/System.html":{}},"body":{"interfaces/GetWeatherResponse.html":{},"interfaces/System.html":{},"coverage.html":{}}}],["system.model",{"_index":265,"title":{},"body":{"interfaces/GetWeatherResponse.html":{}}}],["table",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":680,"title":{},"body":{"coverage.html":{}}}],["tech",{"_index":736,"title":{},"body":{"index.html":{}}}],["temp",{"_index":477,"title":{},"body":{"interfaces/Temperature.html":{}}}],["temp_max",{"_index":478,"title":{},"body":{"interfaces/Temperature.html":{}}}],["temp_min",{"_index":479,"title":{},"body":{"interfaces/Temperature.html":{}}}],["temperature",{"_index":260,"title":{"interfaces/Temperature.html":{}},"body":{"interfaces/GetWeatherResponse.html":{},"components/HomeComponent.html":{},"interfaces/Temperature.html":{},"interfaces/Widget.html":{},"coverage.html":{}}}],["temperature.model",{"_index":266,"title":{},"body":{"interfaces/GetWeatherResponse.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["terminal",{"_index":752,"title":{},"body":{"index.html":{}}}],["test",{"_index":792,"title":{},"body":{"index.html":{}}}],["tests",{"_index":791,"title":{},"body":{"index.html":{}}}],["text",{"_index":429,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["this.appendparams(params",{"_index":555,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.buildwidgetobject(res",{"_index":369,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.cdr.detectchanges",{"_index":358,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.city",{"_index":365,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.city).subscribe",{"_index":368,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.convertmpstokmh(res.wind.speed",{"_index":383,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.countries[widget.countryid",{"_index":601,"title":{},"body":{"components/WidgetComponent.html":{}}}],["this.country",{"_index":600,"title":{},"body":{"components/WidgetComponent.html":{}}}],["this.createimagefromblob(data",{"_index":608,"title":{},"body":{"components/WidgetComponent.html":{}}}],["this.data",{"_index":595,"title":{},"body":{"components/WidgetComponent.html":{}}}],["this.date",{"_index":596,"title":{},"body":{"components/WidgetComponent.html":{}}}],["this.dialog.open(errordialogcomponent",{"_index":407,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.findrandomcity",{"_index":394,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.findrandomcity().subscribe",{"_index":371,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.flag",{"_index":602,"title":{},"body":{"components/WidgetComponent.html":{}}}],["this.getrandomcoordinate(lat.from",{"_index":397,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.getrandomcoordinate(lon.from",{"_index":400,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.getweather().pipe",{"_index":389,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.getweatherwithlocation(this.country",{"_index":367,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.http.get(this.basepath",{"_index":554,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.http.get(this.iconpath",{"_index":500,"title":{},"body":{"injectables/WeatherIconService.html":{}}}],["this.icon",{"_index":615,"title":{},"body":{"components/WidgetComponent.html":{}}}],["this.iconappend",{"_index":501,"title":{},"body":{"injectables/WeatherIconService.html":{}}}],["this.isimageloading",{"_index":610,"title":{},"body":{"components/WidgetComponent.html":{}}}],["this.lat",{"_index":449,"title":{},"body":{"classes/Params.html":{}}}],["this.lon",{"_index":450,"title":{},"body":{"classes/Params.html":{}}}],["this.prefix",{"_index":603,"title":{},"body":{"components/WidgetComponent.html":{}}}],["this.q",{"_index":451,"title":{},"body":{"classes/Params.html":{}}}],["this.showerror",{"_index":370,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.showloading",{"_index":366,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.storageservice.loadweather",{"_index":356,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.storageservice.saveweather(widget",{"_index":387,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.updatedata(widget",{"_index":357,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.weathericonservice.geticon(iconname).subscribe",{"_index":607,"title":{},"body":{"components/WidgetComponent.html":{}}}],["this.weatherservice.getwithlatlon(latitude",{"_index":402,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.weatherservice.getwithlocation(country",{"_index":395,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.widgetchild.updatedata(widget",{"_index":388,"title":{},"body":{"components/HomeComponent.html":{}}}],["throw",{"_index":392,"title":{},"body":{"components/HomeComponent.html":{}}}],["throwerror",{"_index":348,"title":{},"body":{"components/HomeComponent.html":{}}}],["throwerror(weather",{"_index":393,"title":{},"body":{"components/HomeComponent.html":{}}}],["time",{"_index":728,"title":{},"body":{"index.html":{}}}],["timezone",{"_index":257,"title":{},"body":{"interfaces/GetWeatherResponse.html":{},"components/HomeComponent.html":{},"interfaces/Widget.html":{}}}],["title",{"_index":223,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["todo",{"_index":802,"title":{},"body":{"index.html":{}}}],["toolbar",{"_index":161,"title":{},"body":{"classes/AppPage.html":{},"components/HeaderComponent.html":{}}}],["top",{"_index":277,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/WidgetComponent.html":{}}}],["tort",{"_index":888,"title":{},"body":{"license.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["true",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/WidgetComponent.html":{},"miscellaneous/variables.html":{}}}],["trying",{"_index":319,"title":{},"body":{"components/HomeComponent.html":{}}}],["type",{"_index":170,"title":{},"body":{"classes/AppRoutes.html":{},"interfaces/Clouds.html":{},"interfaces/Coordinates.html":{},"interfaces/DialogData.html":{},"components/ErrorDialogComponent.html":{},"interfaces/GetWeatherResponse.html":{},"components/HomeComponent.html":{},"classes/Params.html":{},"injectables/StorageService.html":{},"interfaces/System.html":{},"interfaces/Temperature.html":{},"interfaces/Weather.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"interfaces/Widget.html":{},"components/WidgetComponent.html":{},"interfaces/Wind.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":779,"title":{},"body":{"index.html":{}}}],["unit",{"_index":790,"title":{},"body":{"index.html":{}}}],["units",{"_index":522,"title":{},"body":{"interceptors/WeatherInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["units.celsius",{"_index":534,"title":{},"body":{"interceptors/WeatherInterceptor.html":{}}}],["until",{"_index":320,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["untis",{"_index":509,"title":{},"body":{"interceptors/WeatherInterceptor.html":{}}}],["up",{"_index":744,"title":{},"body":{"index.html":{}}}],["update",{"_index":363,"title":{},"body":{"components/HomeComponent.html":{}}}],["updatedata",{"_index":303,"title":{},"body":{"components/HomeComponent.html":{},"components/WidgetComponent.html":{}}}],["updatedata(widget",{"_index":336,"title":{},"body":{"components/HomeComponent.html":{},"components/WidgetComponent.html":{}}}],["use",{"_index":786,"title":{},"body":{"index.html":{},"license.html":{}}}],["useclass",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":751,"title":{},"body":{"index.html":{}}}],["utcoffset(widget.timezone",{"_index":597,"title":{},"body":{"components/WidgetComponent.html":{}}}],["valid",{"_index":322,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["validate",{"_index":808,"title":{},"body":{"index.html":{}}}],["validation",{"_index":815,"title":{},"body":{"index.html":{}}}],["validator",{"_index":806,"title":{},"body":{"index.html":{}}}],["value",{"_index":173,"title":{},"body":{"classes/AppRoutes.html":{},"components/HomeComponent.html":{},"injectables/StorageService.html":{},"injectables/WeatherIconService.html":{},"interceptors/WeatherInterceptor.html":{},"injectables/WeatherService.html":{},"components/WidgetComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{}}}],["variable",{"_index":671,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":900,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":776,"title":{},"body":{"index.html":{}}}],["view",{"_index":362,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["viewchild",{"_index":344,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewchild(widgetcomponent",{"_index":342,"title":{},"body":{"components/HomeComponent.html":{}}}],["visual",{"_index":799,"title":{},"body":{"index.html":{}}}],["void",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"injectables/StorageService.html":{},"components/WidgetComponent.html":{}}}],["want",{"_index":411,"title":{},"body":{"components/HomeComponent.html":{}}}],["warranties",{"_index":874,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":869,"title":{},"body":{"license.html":{}}}],["weather",{"_index":258,"title":{"interfaces/Weather.html":{}},"body":{"interfaces/GetWeatherResponse.html":{},"components/HomeComponent.html":{},"interfaces/Weather.html":{},"coverage.html":{},"index.html":{}}}],["weather.model",{"_index":267,"title":{},"body":{"interfaces/GetWeatherResponse.html":{}}}],["weather.name",{"_index":391,"title":{},"body":{"components/HomeComponent.html":{}}}],["weathericonservice",{"_index":481,"title":{"injectables/WeatherIconService.html":{}},"body":{"injectables/WeatherIconService.html":{},"components/WidgetComponent.html":{},"coverage.html":{}}}],["weatherinterceptor",{"_index":99,"title":{"interceptors/WeatherInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/WeatherInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["weatherinterceptor.api_key",{"_index":532,"title":{},"body":{"interceptors/WeatherInterceptor.html":{}}}],["weathermap",{"_index":722,"title":{},"body":{"index.html":{}}}],["weathers",{"_index":735,"title":{},"body":{"index.html":{}}}],["weatherservice",{"_index":307,"title":{"injectables/WeatherService.html":{}},"body":{"components/HomeComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["weight",{"_index":245,"title":{},"body":{"components/ErrorDialogComponent.html":{},"components/NotFoundComponent.html":{}}}],["whether",{"_index":885,"title":{},"body":{"license.html":{}}}],["widget",{"_index":79,"title":{"interfaces/Widget.html":{}},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"injectables/StorageService.html":{},"interfaces/Widget.html":{},"components/WidgetComponent.html":{},"coverage.html":{}}}],["widget.component.html",{"_index":563,"title":{},"body":{"components/WidgetComponent.html":{}}}],["widget.component.scss",{"_index":562,"title":{},"body":{"components/WidgetComponent.html":{}}}],["widget.countryid.tolocalelowercase",{"_index":604,"title":{},"body":{"components/WidgetComponent.html":{}}}],["widget.icon",{"_index":606,"title":{},"body":{"components/WidgetComponent.html":{}}}],["widget.model",{"_index":594,"title":{},"body":{"components/WidgetComponent.html":{}}}],["widget/widget.component",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{}}}],["widget/widget.model",{"_index":355,"title":{},"body":{"components/HomeComponent.html":{}}}],["widget__country",{"_index":649,"title":{},"body":{"components/WidgetComponent.html":{}}}],["widget__inner",{"_index":646,"title":{},"body":{"components/WidgetComponent.html":{}}}],["widgetchild",{"_index":292,"title":{},"body":{"components/HomeComponent.html":{}}}],["widgetcomponent",{"_index":78,"title":{"components/WidgetComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/WidgetComponent.html":{},"coverage.html":{},"overview.html":{}}}],["width",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorDialogComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["wind",{"_index":259,"title":{"interfaces/Wind.html":{}},"body":{"interfaces/GetWeatherResponse.html":{},"components/WidgetComponent.html":{},"interfaces/Wind.html":{},"coverage.html":{}}}],["wind.model",{"_index":268,"title":{},"body":{"interfaces/GetWeatherResponse.html":{}}}],["windspeed",{"_index":382,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/Widget.html":{}}}],["withcity",{"_index":434,"title":{},"body":{"classes/Params.html":{}}}],["withcity(city",{"_index":441,"title":{},"body":{"classes/Params.html":{}}}],["withcountry",{"_index":435,"title":{},"body":{"classes/Params.html":{}}}],["withcountry(country",{"_index":443,"title":{},"body":{"classes/Params.html":{}}}],["withlat",{"_index":436,"title":{},"body":{"classes/Params.html":{}}}],["withlat(lat",{"_index":445,"title":{},"body":{"classes/Params.html":{}}}],["withlon",{"_index":437,"title":{},"body":{"classes/Params.html":{}}}],["withlon(lon",{"_index":447,"title":{},"body":{"classes/Params.html":{}}}],["without",{"_index":843,"title":{},"body":{"license.html":{}}}],["you'll",{"_index":745,"title":{},"body":{"index.html":{}}}],["zone",{"_index":730,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                @import 'src/styles/mixins.scss';\n\n#look-at-the-sky-app {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  margin: auto;\n  width: 80%;\n\n  @include breakpoint('desktop') {\n    width: 1180px;\n  }\n}\n\n// Expand the router-outlet height content to maximum size\n:host ::ng-deep router-outlet + * {\n  display: flex;\n  flex-grow: 1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'WidgetComponent', 'selector': 'widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nErrorDialogComponent\n\nErrorDialogComponent\n\nAppModule -->\n\nErrorDialogComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nWidgetComponent\n\nWidgetComponent\n\nAppModule -->\n\nWidgetComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nWeatherInterceptor\n\nWeatherInterceptor\n\nAppModule -->\n\nWeatherInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ErrorDialogComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            NotFoundComponent\n                        \n                        \n                            WidgetComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            WeatherInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            NO_ERRORS_SCHEMA\n                        \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport {\n  CUSTOM_ELEMENTS_SCHEMA,\n  NgModule,\n  NO_ERRORS_SCHEMA\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { WeatherInterceptor } from '@services/weather/weather.interceptor';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { ErrorDialogComponent } from './shared/error-dialog/error-dialog.component';\nimport { HeaderComponent } from './shared/header/header.component';\nimport { NotFoundComponent } from './shared/not-found/not-found.component';\nimport { WidgetComponent } from './widget/widget.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    NotFoundComponent,\n    ErrorDialogComponent,\n    WidgetComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n    MatProgressSpinnerModule,\n    MatToolbarModule,\n    HttpClientModule\n  ],\n  providers: [\n    HttpClientModule,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: WeatherInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent],\n  schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphPageTitle\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParagraphPageTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetParagraphPageTitle()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphPageTitle() {\n    return element(by.css('#look-at-the-sky-app .mat-toolbar span')).getText();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppRoutes.html":{"url":"classes/AppRoutes.html","title":"class - AppRoutes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppRoutes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/routes.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                HOME\n                            \n                            \n                                    Static\n                                    Readonly\n                                NOT_FOUND\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            HOME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/routes.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            NOT_FOUND\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"not-found\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/routes.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AppRoutes {\n  public static readonly HOME = \"\";\n  public static readonly NOT_FOUND = \"not-found\";\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { NotFoundComponent } from './shared/not-found/not-found.component';\nimport { AppRoutes } from './shared/routes';\n\nconst routes: Routes = [\n  { path: \"\", component: HomeComponent },\n  { path: \"not-found\", component: NotFoundComponent },\n  { path: '**', redirectTo: \"not-found\" }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Clouds.html":{"url":"interfaces/Clouds.html","title":"interface - Clouds","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Clouds\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather/shared/Clouds.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        all\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        all\n                                    \n                                \n                                \n                                    \n                                        all:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Clouds {\n  all: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Coordinates.html":{"url":"interfaces/Coordinates.html","title":"interface - Coordinates","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Coordinates\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather/shared/Coordinates.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lat\n                                \n                                \n                                        lon\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lon\n                                    \n                                \n                                \n                                    \n                                        lon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Coordinates {\n  lon: number;\n  lat: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/error-dialog/dialog-data.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DialogData {\n  message: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorDialogComponent.html":{"url":"components/ErrorDialogComponent.html","title":"component - ErrorDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/error-dialog/error-dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-dialog\n            \n\n            \n                styleUrls\n                ./error-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/error-dialog/error-dialog.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DialogData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/error-dialog/error-dialog.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogData } from './dialog-data';\n\n@Component({\n  selector: 'app-error-dialog',\n  templateUrl: './error-dialog.component.html',\n  styleUrls: ['./error-dialog.component.scss']\n})\nexport class ErrorDialogComponent {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n}\n\n    \n\n    \n        \n  \n    \n    Error\n  \n  \n    {{ data.message }}\n  \n  \n    Close\n  \n\n\n    \n\n    \n                \n                    ./error-dialog.component.scss\n                \n                #error-dialog {\n  min-width: 20rem;\n\n  .grey {\n    color: #5a5a5a;\n  }\n\n  .mat-dialog-title {\n    color: #e2001a;\n    margin: auto;\n    display: flex;\n    align-items: baseline;\n    justify-content: center;\n    border-bottom: 3px solid #f0eeeb;\n\n    h1 {\n      margin: 0.3em 0;\n    }\n\n    i {\n      font-size: 2em;\n      margin-right: 1rem;\n    }\n  }\n\n  .mat-dialog-content {\n    margin: 2em 0 1em;\n    font-size: 1.5em;\n  }\n\n  button {\n    margin: auto;\n    font-weight: 600;\n    font-size: 1.4em;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Error        {{ data.message }}        Close  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'WidgetComponent', 'selector': 'widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetWeatherResponse.html":{"url":"interfaces/GetWeatherResponse.html","title":"interface - GetWeatherResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetWeatherResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather/shared/GetWeatherResponse.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        base\n                                \n                                \n                                        clouds\n                                \n                                \n                                        cod\n                                \n                                \n                                        coord\n                                \n                                \n                                        dt\n                                \n                                \n                                        id\n                                \n                                \n                                        main\n                                \n                                \n                                        name\n                                \n                                \n                                        sys\n                                \n                                \n                                        timezone\n                                \n                                \n                                        weather\n                                \n                                \n                                        wind\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        base\n                                    \n                                \n                                \n                                    \n                                        base:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clouds\n                                    \n                                \n                                \n                                    \n                                        clouds:         Clouds\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Clouds\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cod\n                                    \n                                \n                                \n                                    \n                                        cod:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coord\n                                    \n                                \n                                \n                                    \n                                        coord:         Coordinates\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Coordinates\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dt\n                                    \n                                \n                                \n                                    \n                                        dt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        main\n                                    \n                                \n                                \n                                    \n                                        main:         Temperature\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Temperature\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sys\n                                    \n                                \n                                \n                                    \n                                        sys:         System\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         System\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timezone\n                                    \n                                \n                                \n                                    \n                                        timezone:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weather\n                                    \n                                \n                                \n                                    \n                                        weather:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wind\n                                    \n                                \n                                \n                                    \n                                        wind:         Wind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Wind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Clouds } from './Clouds.model';\nimport { Coordinates } from './Coordinates.model';\nimport { System } from './System.model';\nimport { Temperature } from './Temperature.model';\nimport { Weather } from './Weather.model';\nimport { Wind } from './Wind.model';\n\nexport interface GetWeatherResponse {\n  coord: Coordinates;\n  weather: Array;\n  base: string;\n  main: Temperature;\n  wind: Wind;\n  clouds: Clouds;\n  dt: number;\n  sys: System;\n  timezone: number;\n  id: number;\n  name: string;\n  cod: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/header/header.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/header/header.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    Look at the Sky\n  \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                @import 'src/styles/mixins.scss';\n\n#header {\n  display: flex;\n\n  .mat-toolbar {\n    display: flex;\n    margin: auto;\n    margin-top: 2%;\n    border-bottom: 4px solid #685bd7;\n    background: none;\n    width: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Look at the Sky  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'WidgetComponent', 'selector': 'widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                city\n                            \n                            \n                                country\n                            \n                            \n                                showLoading\n                            \n                            \n                                    Private\n                                widgetChild\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildWidgetObject\n                            \n                            \n                                convertMPSToKMH\n                            \n                            \n                                findRandomCity\n                            \n                            \n                                getRandomCoordinate\n                            \n                            \n                                getWeather\n                            \n                            \n                                getWeatherWithLocation\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                randomWeather\n                            \n                            \n                                search\n                            \n                            \n                                showError\n                            \n                            \n                                updateData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef, dialog: MatDialog, weatherService: WeatherService, storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                        WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildWidgetObject\n                        \n                        \n                    \n                \n            \n            \n                \nbuildWidgetObject(res: GetWeatherResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                GetWeatherResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Widget\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertMPSToKMH\n                        \n                        \n                    \n                \n            \n            \n                \nconvertMPSToKMH(mps: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findRandomCity\n                        \n                        \n                    \n                \n            \n            \n                \nfindRandomCity()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:98\n                \n            \n\n\n            \n                \n                    Keep trying until finds a valid city\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRandomCoordinate\n                        \n                        \n                    \n                \n            \n            \n                \ngetRandomCoordinate(from: number, to: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWeather\n                        \n                        \n                    \n                \n            \n            \n                \ngetWeather()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWeatherWithLocation\n                        \n                        \n                    \n                \n            \n            \n                \ngetWeatherWithLocation(country: string, city: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    country\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            randomWeather\n                        \n                        \n                    \n                \n            \n            \n                \nrandomWeather()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showError\n                        \n                        \n                    \n                \n            \n            \n                \nshowError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateData\n                        \n                        \n                    \n                \n            \n            \n                \nupdateData(widget: Widget)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    widget\n                                    \n                                                Widget\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            widgetChild\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WidgetComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(WidgetComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { StorageService } from '@services/storage/storage.service';\nimport { GetWeatherResponse } from '@services/weather/shared/GetWeatherResponse.model';\nimport { WeatherService } from '@services/weather/weather.service';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { ErrorDialogComponent } from '../shared/error-dialog/error-dialog.component';\nimport { Lat } from '../shared/Latitude.enum';\nimport { Lon } from '../shared/Longitude.enum';\nimport { WidgetComponent } from '../widget/widget.component';\nimport { Widget } from '../widget/widget.model';\n\n@Component({\n  selector: 'home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit, AfterViewInit {\n  @ViewChild(WidgetComponent)\n  private widgetChild: WidgetComponent;\n  country: string;\n  city: string;\n  showLoading: boolean = false;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private dialog: MatDialog,\n    private weatherService: WeatherService,\n    private storageService: StorageService\n  ) {}\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit(): void {\n    const widget = this.storageService.loadWeather();\n    this.updateData(widget);\n    this.cdr.detectChanges(); // Prevent error due child view update\n  }\n\n  search(event: any) {\n    event.stopPropagation();\n\n    if (this.city) {\n      this.showLoading = true;\n      this.getWeatherWithLocation(this.country, this.city).subscribe(\n        (res: GetWeatherResponse) => {\n          this.showLoading = false;\n          const widget = this.buildWidgetObject(res);\n          this.updateData(widget);\n        },\n        () => this.showError()\n      );\n    }\n  }\n\n  randomWeather() {\n    this.showLoading = true;\n    this.findRandomCity().subscribe(\n      (res: GetWeatherResponse) => {\n        this.showLoading = false;\n        const widget = this.buildWidgetObject(res);\n        this.updateData(widget);\n      },\n      () => this.showError()\n    );\n  }\n\n  buildWidgetObject(res: GetWeatherResponse): Widget {\n    return {\n      city: res.name,\n      countryId: res.sys.country,\n      temperature: res.main.temp,\n      lat: res.coord.lat,\n      lon: res.coord.lon,\n      description: res.weather[0].description,\n      humidity: res.main.humidity,\n      windSpeed: this.convertMPSToKMH(res.wind.speed),\n      timezone: res.timezone,\n      icon: res.weather[0].icon\n    };\n  }\n\n  updateData(widget: Widget) {\n    this.storageService.saveWeather(widget);\n    this.widgetChild.updateData(widget);\n  }\n\n  /**\n   * Keep trying until finds a valid city\n   */\n  findRandomCity() {\n    return this.getWeather().pipe(\n      map((weather) => {\n        if (weather.name === '') {\n          throw throwError(weather);\n        }\n        return weather;\n      }),\n      catchError(() => this.findRandomCity())\n    );\n  }\n\n  getWeatherWithLocation(country: string, city: string) {\n    return this.weatherService.getWithLocation(country, city);\n  }\n\n  getWeather(): Observable {\n    const latitude = this.getRandomCoordinate(Lat.FROM, Lat.TO);\n    const longitude = this.getRandomCoordinate(Lon.FROM, Lon.TO);\n\n    return this.weatherService.getWithLatLon(latitude, longitude);\n  }\n\n  getRandomCoordinate(from: number, to: number) {\n    return (Math.random() * (to - from) + from).toFixed(3);\n  }\n\n  convertMPSToKMH(mps: number): string {\n    return ((mps / 1000) * 3600).toFixed(1);\n  }\n\n  showError(): void {\n    this.showLoading = false;\n    this.dialog.open(ErrorDialogComponent, {\n      data: { message: 'Error connecting to the servers!' }\n    });\n  }\n}\n\n    \n\n    \n        \n  Search bellow for the city you want to see the weather\n\n  \n    \n      Country\n      \n    \n\n    \n      City\n      \n    \n\n    \n      Search\n      \n        \n      \n    \n  \n\n  \n    or just search for a random city here!\n    \n      Random City\n      \n        \n      \n    \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                @import 'src/styles/mixins.scss';\n\n#home {\n  display: flex;\n  justify-content: center;\n  margin: auto;\n  color: #5a5a5a;\n  margin-top: 3em;\n  width: 100%;\n  flex-direction: column;\n\n  @include breakpoint('\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Search bellow for the city you want to see the weather            Country                    City                    Search                                or just search for a random city here!          Random City                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'WidgetComponent', 'selector': 'widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/not-found/not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                styleUrls\n                ./not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/not-found/not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/not-found/not-found.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  Page not found :(\n\n\n    \n\n    \n                \n                    ./not-found.component.scss\n                \n                #not-found {\n  display: flex;\n  flex-direction: column;\n  margin: 2em auto;\n\n  .icon {\n    display: flex;\n    margin: 0 auto 0;\n\n    i {\n      font-size: 2em;\n      color: #e2001a;\n    }\n  }\n\n  h1 {\n    font-weight: 400;\n    font-size: 1.875rem;\n    line-height: 2.25rem;\n    margin-bottom: 1.0625rem;\n    color: #5a5a5a;\n    text-align: center;\n    line-height: 1.5rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Page not found :('\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'WidgetComponent', 'selector': 'widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Params.html":{"url":"classes/Params.html","title":"class - Params","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Params\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather/shared/Parameters.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lat\n                            \n                            \n                                lon\n                            \n                            \n                                q\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                withCity\n                            \n                            \n                                withCountry\n                            \n                            \n                                withLat\n                            \n                            \n                                withLon\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/shared/Parameters.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/shared/Parameters.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            q\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/shared/Parameters.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            withCity\n                        \n                        \n                    \n                \n            \n            \n                \nwithCity(city: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather/shared/Parameters.model.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            withCountry\n                        \n                        \n                    \n                \n            \n            \n                \nwithCountry(country: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather/shared/Parameters.model.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    country\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            withLat\n                        \n                        \n                    \n                \n            \n            \n                \nwithLat(lat: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather/shared/Parameters.model.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lat\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            withLon\n                        \n                        \n                    \n                \n            \n            \n                \nwithLon(lon: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather/shared/Parameters.model.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Params {\n  lat: string;\n  lon: string;\n  q: string;\n\n  withLat(lat: string) {\n    this.lat = lat;\n    return this;\n  }\n\n  withLon(lon: string) {\n    this.lon = lon;\n    return this;\n  }\n\n  withCountry(country: string) {\n    if (this.q) {\n      this.q += ',' + country;\n    } else {\n      this.q = country;\n    }\n    return this;\n  }\n\n  withCity(city: string) {\n    this.q = city;\n    return this;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/storage/storage.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                KEY_WEATHER\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loadWeather\n                            \n                            \n                                    Public\n                                saveWeather\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadWeather\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadWeather()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/storage/storage.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Widget\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            saveWeather\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveWeather(currentWeather: Widget)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/storage/storage.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentWeather\n                                    \n                                                Widget\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            KEY_WEATHER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sky_weather'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/storage/storage.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Widget } from 'src/app/widget/widget.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n  private static KEY_WEATHER = 'sky_weather';\n\n  public saveWeather(currentWeather: Widget): void {\n    localStorage.removeItem(StorageService.KEY_WEATHER);\n    localStorage.setItem(\n      StorageService.KEY_WEATHER,\n      JSON.stringify(currentWeather)\n    );\n  }\n\n  public loadWeather(): Widget {\n    return JSON.parse(localStorage.getItem(StorageService.KEY_WEATHER));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/System.html":{"url":"interfaces/System.html","title":"interface - System","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  System\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather/shared/System.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        country\n                                \n                                \n                                        id\n                                \n                                \n                                        sunrise\n                                \n                                \n                                        sunset\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sunrise\n                                    \n                                \n                                \n                                    \n                                        sunrise:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sunset\n                                    \n                                \n                                \n                                    \n                                        sunset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface System {\n  type: number;\n  id: number;\n  country: string;\n  sunrise: number;\n  sunset: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Temperature.html":{"url":"interfaces/Temperature.html","title":"interface - Temperature","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Temperature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather/shared/Temperature.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        feels_like\n                                \n                                \n                                        humidity\n                                \n                                \n                                        pressure\n                                \n                                \n                                        temp\n                                \n                                \n                                        temp_max\n                                \n                                \n                                        temp_min\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        feels_like\n                                    \n                                \n                                \n                                    \n                                        feels_like:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        humidity\n                                    \n                                \n                                \n                                    \n                                        humidity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pressure\n                                    \n                                \n                                \n                                    \n                                        pressure:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temp\n                                    \n                                \n                                \n                                    \n                                        temp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temp_max\n                                    \n                                \n                                \n                                    \n                                        temp_max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temp_min\n                                    \n                                \n                                \n                                    \n                                        temp_min:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Temperature {\n  temp: number;\n  feels_like: number;\n  temp_min: number;\n  temp_max: number;\n  pressure: number;\n  humidity: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Weather.html":{"url":"interfaces/Weather.html","title":"interface - Weather","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Weather\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather/shared/Weather.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        icon\n                                \n                                \n                                        id\n                                \n                                \n                                        main\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        main\n                                    \n                                \n                                \n                                    \n                                        main:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Weather {\n  id: number;\n  main: string;\n  description: string;\n  icon: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherIconService.html":{"url":"injectables/WeatherIconService.html","title":"injectable - WeatherIconService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherIconService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weatherIcon/weather-icon.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                iconAppend\n                            \n                            \n                                    Private\n                                iconPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getIcon\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/weatherIcon/weather-icon.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getIcon\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getIcon(iconId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weatherIcon/weather-icon.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iconId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            iconAppend\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.ICON_APPEND\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weatherIcon/weather-icon.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            iconPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.ICON_URL\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weatherIcon/weather-icon.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '@envs/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherIconService {\n  private iconPath: string = environment.ICON_URL;\n  private iconAppend: string = environment.ICON_APPEND;\n\n  constructor(private http: HttpClient) {}\n\n  public getIcon(iconId: string): Observable {\n    return this.http.get(this.iconPath + iconId + this.iconAppend, {\n      responseType: 'blob'\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/WeatherInterceptor.html":{"url":"interceptors/WeatherInterceptor.html","title":"interceptor - WeatherInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  WeatherInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather/weather.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                API_KEY\n                            \n                            \n                                    Private\n                                    Static\n                                APP_ID\n                            \n                            \n                                    Private\n                                    Static\n                                UNTIS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/weather/weather.interceptor.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather/weather.interceptor.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            API_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.API_KEY\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather.interceptor.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            APP_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'appid'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather.interceptor.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            UNTIS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'units'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather.interceptor.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '@envs/environment';\nimport { Observable } from 'rxjs';\nimport { Units } from './shared/units.enum';\n\n@Injectable()\nexport class WeatherInterceptor implements HttpInterceptor {\n  private static API_KEY: string = environment.API_KEY;\n  private static APP_ID: string = 'appid';\n  private static UNTIS: string = 'units';\n\n  constructor() {}\n\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    if (request.url.indexOf(environment.BASE_URL) === -1) {\n      return next.handle(request);\n    }\n    const req = request.clone({\n      params: request.params\n        .set(WeatherInterceptor.APP_ID, WeatherInterceptor.API_KEY)\n        .set(WeatherInterceptor.UNTIS, Units.CELSIUS)\n    });\n    return next.handle(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather/weather.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                basePath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                appendParams\n                            \n                            \n                                    Public\n                                getWithLatLon\n                            \n                            \n                                    Public\n                                getWithLocation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/weather/weather.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            appendParams\n                        \n                        \n                    \n                \n            \n            \n                \nappendParams(params: Params)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather/weather.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HttpParams\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getWithLatLon\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWithLatLon(lat: string, lon: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather/weather.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lat\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getWithLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWithLocation(country: string, city: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather/weather.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    country\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            basePath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.BASE_URL\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '@envs/environment';\nimport { Observable } from 'rxjs';\nimport { GetWeatherResponse } from './shared/GetWeatherResponse.model';\nimport { Params } from './shared/Parameters.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n  private basePath: string = environment.BASE_URL;\n\n  constructor(private http: HttpClient) {}\n\n  public getWithLocation(\n    country: string,\n    city: string\n  ): Observable {\n    const params = new Params().withCountry(country).withCity(city);\n\n    return this.http.get(this.basePath, {\n      params: this.appendParams(params)\n    });\n  }\n\n  public getWithLatLon(\n    lat: string,\n    lon: string\n  ): Observable {\n    const params = new Params().withLat(lat).withLon(lon);\n\n    return this.http.get(this.basePath, {\n      params: this.appendParams(params)\n    });\n  }\n\n  appendParams(params: Params): HttpParams {\n    let httpParams = new HttpParams();\n    Object.keys(params).forEach((key) => {\n      httpParams = httpParams.append(key, params[key]);\n    });\n\n    return httpParams;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Widget.html":{"url":"interfaces/Widget.html","title":"interface - Widget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Widget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/widget/widget.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        city\n                                \n                                \n                                        countryId\n                                \n                                \n                                        description\n                                \n                                \n                                        humidity\n                                \n                                \n                                        icon\n                                \n                                \n                                        lat\n                                \n                                \n                                        lon\n                                \n                                \n                                        temperature\n                                \n                                \n                                        timezone\n                                \n                                \n                                        windSpeed\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        countryId\n                                    \n                                \n                                \n                                    \n                                        countryId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        humidity\n                                    \n                                \n                                \n                                    \n                                        humidity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lon\n                                    \n                                \n                                \n                                    \n                                        lon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temperature\n                                    \n                                \n                                \n                                    \n                                        temperature:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timezone\n                                    \n                                \n                                \n                                    \n                                        timezone:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        windSpeed\n                                    \n                                \n                                \n                                    \n                                        windSpeed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Widget {\n  city: string;\n  countryId: string;\n  temperature: number;\n  lat: number;\n  lon: number;\n  description: string;\n  humidity: number;\n  windSpeed: string;\n  icon: any;\n  timezone: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WidgetComponent.html":{"url":"components/WidgetComponent.html","title":"component - WidgetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WidgetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/widget/widget.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                widget\n            \n\n            \n                styleUrls\n                ./widget.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./widget.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                countries\n                            \n                            \n                                country\n                            \n                            \n                                data\n                            \n                            \n                                date\n                            \n                            \n                                    Private\n                                    Static\n                                DATE_FORMAT\n                            \n                            \n                                flag\n                            \n                            \n                                icon\n                            \n                            \n                                isImageLoading\n                            \n                            \n                                prefix\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createImageFromBlob\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherIconService: WeatherIconService)\n                    \n                \n                        \n                            \n                                Defined in src/app/widget/widget.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weatherIconService\n                                                  \n                                                        \n                                                                        WeatherIconService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createImageFromBlob\n                        \n                        \n                    \n                \n            \n            \n                \ncreateImageFromBlob(image: Blob)\n                \n            \n\n\n            \n                \n                    Defined in src/app/widget/widget.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    image\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/widget/widget.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateData\n                        \n                        \n                    \n                \n            \n            \n                \nupdateData(widget: Widget)\n                \n            \n\n\n            \n                \n                    Defined in src/app/widget/widget.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    widget\n                                    \n                                                Widget\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            countries\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('@mockData/CountriesISO.json')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/widget/widget.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/widget/widget.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Widget\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/widget/widget.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/widget/widget.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            DATE_FORMAT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'dddd, MMMM DD, LT'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/widget/widget.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/widget/widget.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/widget/widget.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isImageLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/widget/widget.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prefix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'flag-icon-'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/widget/widget.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { WeatherIconService } from '@services/weatherIcon/weather-icon.service';\nimport * as moment from 'moment';\nimport { Widget } from './widget.model';\n\n@Component({\n  selector: 'widget',\n  templateUrl: './widget.component.html',\n  styleUrls: ['./widget.component.scss']\n})\nexport class WidgetComponent implements OnInit {\n  countries = require('@mockData/CountriesISO.json');\n  isImageLoading: boolean = true;\n  prefix: string = 'flag-icon-';\n  country: string;\n  flag: string;\n  date: string;\n  icon: any;\n  data: Widget;\n\n  private static DATE_FORMAT = 'dddd, MMMM DD, LT';\n  constructor(private weatherIconService: WeatherIconService) {}\n\n  ngOnInit(): void {}\n\n  updateData(widget: Widget) {\n    this.data = widget;\n    this.date = moment()\n      .utcOffset(widget.timezone / 60)\n      .format(WidgetComponent.DATE_FORMAT);\n\n    this.country = this.countries[widget.countryId];\n    this.flag = this.prefix + widget.countryId.toLocaleLowerCase();\n\n    let iconName = widget.icon;\n    this.weatherIconService.getIcon(iconName).subscribe(\n      (data: Blob) => {\n        this.createImageFromBlob(data);\n      },\n      null,\n      () => (this.isImageLoading = false)\n    );\n  }\n\n  createImageFromBlob(image: Blob) {\n    let reader = new FileReader();\n    reader.addEventListener(\n      'load',\n      () => {\n        this.icon = reader.result;\n      },\n      false\n    );\n\n    if (image) {\n      reader.readAsDataURL(image);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ date }}\n        \n        \n          \n            \n              {{ data.city }}\n              lat/lon: {{ data.lat }}/{{ data.lon }}\n            \n            \n              \n              \n                \n              \n              {{ data.temperature }} &deg;\n                = 10\"\n                >\n            \n            \n              \n                {{ data.description }}\n              \n              \n                humidity: {{ data.humidity }}% \n              \n              \n                wind speed: {{ data.windSpeed }} KM/H\n                \n              \n            \n          \n        \n      \n    \n    \n      \n        \n        {{ country }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./widget.component.scss\n                \n                @import 'src/styles/mixins.scss';\n\n.widget {\n  position: relative;\n  margin: 150px auto;\n  background-color: #d9d9d9;\n  border-radius: 9px;\n  padding: 25px;\n  padding-right: 30px;\n  box-shadow: 0px 31px 35px -26px #080c21;\n\n  .widget__inner {\n    position: relative;\n    overflow: hidden;\n    height: 100%;\n  }\n\n  .widget__country {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: auto;\n    height: 100%;\n    float: right;\n\n    @include breakpoint('\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ date }}                                                    {{ data.city }}              lat/lon: {{ data.lat }}/{{ data.lon }}                                                                                                {{ data.temperature }} °                = 10\"                >                                                      {{ data.description }}                                            humidity: {{ data.humidity }}%                                             wind speed: {{ data.windSpeed }} KM/H                                                                                                {{ country }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'WidgetComponent', 'selector': 'widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WidgetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Wind.html":{"url":"interfaces/Wind.html","title":"interface - Wind","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Wind\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather/shared/Wind.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deg\n                                \n                                \n                                        speed\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deg\n                                    \n                                \n                                \n                                    \n                                        deg:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speed\n                                    \n                                \n                                \n                                    \n                                        speed:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Wind {\n  speed: number;\n  deg: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                src/app/services/storage/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/weather/shared/Clouds.model.ts\n            \n            interface\n            Clouds\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/weather/shared/Coordinates.model.ts\n            \n            interface\n            Coordinates\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/weather/shared/GetWeatherResponse.model.ts\n            \n            interface\n            GetWeatherResponse\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/weather/shared/Parameters.model.ts\n            \n            class\n            Params\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/weather/shared/System.model.ts\n            \n            interface\n            System\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/weather/shared/Temperature.model.ts\n            \n            interface\n            Temperature\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/weather/shared/Weather.model.ts\n            \n            interface\n            Weather\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/weather/shared/Wind.model.ts\n            \n            interface\n            Wind\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/weather/weather.interceptor.ts\n            \n            interceptor\n            WeatherInterceptor\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/weather/weather.service.ts\n            \n            injectable\n            WeatherService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/weatherIcon/weather-icon.service.ts\n            \n            injectable\n            WeatherIconService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/error-dialog/dialog-data.ts\n            \n            interface\n            DialogData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/error-dialog/error-dialog.component.ts\n            \n            component\n            ErrorDialogComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/routes.ts\n            \n            class\n            AppRoutes\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/widget/widget.component.ts\n            \n            component\n            WidgetComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/widget/widget.model.ts\n            \n            interface\n            Widget\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.production.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.staging.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.test.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^9.1.6\n        \n            @angular/cdk : ^9.2.3\n        \n            @angular/common : ^9.1.6\n        \n            @angular/compiler : ^9.1.6\n        \n            @angular/core : ^9.1.6\n        \n            @angular/forms : ^9.1.6\n        \n            @angular/http : ^7.2.16\n        \n            @angular/material : ^9.2.3\n        \n            @angular/platform-browser : ^9.1.6\n        \n            @angular/platform-browser-dynamic : ^9.1.6\n        \n            @angular/router : ^9.1.6\n        \n            core-js : ^2.6.11\n        \n            js-base64 : ^2.5.2\n        \n            moment : ^2.27.0\n        \n            rxjs : ^6.5.5\n        \n            zone.js : ~0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Lat   (src/.../Latitude.enum.ts)\n                        \n                        \n                            Lon   (src/.../Longitude.enum.ts)\n                        \n                        \n                            Units   (src/.../units.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/Latitude.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Lat\n                    \n                \n                        \n                            \n                                 FROM\n                            \n                        \n                        \n                            \n                                 TO\n                            \n                        \n                        \n                            \n                                Value : 90\n                            \n                        \n            \n        \n\n    src/app/shared/Longitude.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Lon\n                    \n                \n                        \n                            \n                                 FROM\n                            \n                        \n                        \n                            \n                                 TO\n                            \n                        \n                        \n                            \n                                Value : 180\n                            \n                        \n            \n        \n\n    src/app/services/weather/shared/units.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Units\n                    \n                \n                        \n                            \n                                 KELVIN\n                            \n                        \n                        \n                            \n                                Value : standard\n                            \n                        \n                        \n                            \n                                 CELSIUS\n                            \n                        \n                        \n                            \n                                Value : metric\n                            \n                        \n                        \n                            \n                                 FAHRENHEIT\n                            \n                        \n                        \n                            \n                                Value : imperial\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nLook at the Sky\nDescription\nThe purpose of this project is to have a Weathermap api client\nFeatures\n\nWeather information for random city\nRandom Circular search until finds a valid city\nTime in current zone\nSearch by Country/City\nCach strategy for previous weathers\n\nTech Stack\n\nAngular 9\nAngular Material\nFont Awesome\nMoment\nOpen Weather Map API\n\nSetting up the project\n\nYou'll need node installed. You can find it on Nodejs\nUsing your terminal of choice, from the project source folder run the command:\n\n$ npm installThis command should install project dependencies and also the angular-cli\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nAutomatic Documentation\nRun npm run compodoc to create or renew the documentation. To get a local view you can also open an http-server via compodoc itself, using npm run compodoc-serve, which will be available under http://localhost:8080/.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nOpitionaly you can run ng test --code-coverage in order to generate visual information about code coverage.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nTODO list\n\nUse angular's form validator\nBetter validate Country/City inputs\nImprove responsiveness and overall layout\nMore e2e tests\nMore validation against Open Weather API (Integration tests)\nAdd more weather options (E.g next hours, next days)\nCurrent time is static\nimprove documentation (Compodoc)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 Marco Aurélio Batista Corrêa\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nErrorDialogComponent\n\nErrorDialogComponent\n\nAppModule -->\n\nErrorDialogComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nWidgetComponent\n\nWidgetComponent\n\nAppModule -->\n\nWidgetComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nWeatherInterceptor\n\nWeatherInterceptor\n\nAppModule -->\n\nWeatherInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        3 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.production.ts)\n                        \n                        \n                            environment   (src/.../environment.staging.ts)\n                        \n                        \n                            environment   (src/.../environment.test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.development.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n\n  API_KEY: '',\n\n  BASE_URL: '',\n\n  ICON_URL: '',\n\n  ICON_APPEND: ''\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.production.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n\n  API_KEY: '',\n\n  BASE_URL: '',\n\n  ICON_URL: '',\n\n  ICON_APPEND: ''\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.staging.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n\n  API_KEY: '',\n\n  BASE_URL: '',\n\n  ICON_URL: '',\n\n  ICON_APPEND: ''\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n\n  API_KEY: '',\n\n  BASE_URL: '',\n\n  ICON_URL: '',\n\n  ICON_APPEND: ''\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n\n  API_KEY: '11998770b8b4aa7242b99aa88688ca78',\n\n  BASE_URL: 'https://api.openweathermap.org/data/2.5/weather',\n\n  ICON_URL: 'http://openweathermap.org/img/wn/',\n\n  ICON_APPEND: '@2x.png'\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
